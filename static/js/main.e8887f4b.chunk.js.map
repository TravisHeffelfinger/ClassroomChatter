{"version":3,"sources":["helpers/types.js","actions/index.js","services/firebase.js","helpers/db.js","components/ChannelDisplay.js","components/MessageCard.js","components/MessageTextArea.js","pages/Profile.js","pages/Home.js","helpers/auth.js","styles/testlogin.js","pages/LandingPage.js","pages/SignUpPage.js","components/NavBar.js","components/Edit.js","components/App.js","reducers/index.js","index.js"],"names":["types","USER_AUTHENTICATED","USER_DISCONNECTED","GET_USER","MESSAGE_ADDED","ADD_COMMENT","CHANNEL_CHANGE","CHANNEL_ADD","CHANNEL_LIST","getUser","user","type","payload","userId","uid","displayName","email","firstName","lastName","photoURL","website","bio","docId","authenticateUser","authenticated","updateChannels","channels","updateMessages","messages","addComment","comments","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebased","db","firestore","getUserData","Promise","resolve","reject","collection","where","get","then","query","forEach","console","log","id","data","rej","signUpUser","add","dateCreated","Date","getChannels","getMessages","orderBy","getComments","ChannelDisplay","useState","channel","setChannel","newChannelButton","setChannelButton","ownChannelSelect","setOwnChannelSelect","dispatch","useDispatch","store","useStore","useEffect","response","push","handleChannelChange","channelChange","getState","selectedChannel","handleChannelNameChange","event","handleChannelDelete","Card","className","CardHeader","title","Typography","variant","display","IconButton","onClick","TextField","fullWidth","onChange","e","target","value","label","Button","color","size","preventDefault","name","creatorId","members","public","addChannel","allChannels","map","key","result","MessageCard","props","comment","setComment","like","setLike","handleComment","a","commentObject","commentBody","userImg","messageId","commentDoc","avatar","Avatar","src","username","CardContent","messageBody","posts","List","dense","ListItem","ListItemAvatar","ListItemText","primary","secondary","placeholder","multiline","fullwidth","rows","disabled","MessageTextArea","message","setMessage","messageObject","channelRef","userRef","body","channelId","catch","error","Profile","this","subheader","alt","React","Component","connect","state","Home","displayChannelMessages","index","Grid","container","direction","justify","item","xs","mapDispatchToProps","signUpWithEmail","password","auth","createUserWithEmailAndPassword","loginWithEmail","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","Copyright","align","Link","href","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","alignItems","margin","backgroundColor","palette","main","form","width","submit","LoginPage","setEmail","setPassword","setError","classes","userResponse","Container","component","maxWidth","CssBaseline","noValidate","onSubmit","required","helperText","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Box","mt","LandingPage","SignUpPage","handleChange","setState","handleSignUp","authedUser","currentUser","to","InputLabel","NavBar","AppBar","position","Toolbar","signOut","Edit","setDisplayName","setFirstName","setLastName","setWebsite","setBio","updated","setUpdated","getUserInfo","newFields","doc","update","updateUser","App","exact","path","defaultUser","combineReducers","action","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.e8887f4b.chunk.js","sourcesContent":["const types = {\n    USER_AUTHENTICATED : 'USER_AUTHENTICATED',\n    USER_DISCONNECTED : 'USER_DISCONNECTED',\n    GET_USER : 'GET_USER',\n    MESSAGE_ADDED : 'MESSAGE_ADDED',\n    ADD_COMMENT : 'ADD_COMMENT',\n    CHANNEL_CHANGE : 'CHANNEL_CHANGE',\n    CHANNEL_ADD : 'CHANNEL_ADD',\n    CHANNEL_LIST : 'CHANNEL_LIST',\n}\n\nexport default types","import  types from '../helpers/types';\n\nexport const getUser = user => {\n    return {\n        type: types.GET_USER,\n        payload: {\n            userId: user.uid,\n            displayName: user.displayName,\n            email: user.email,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            photoURL: 'http://picsum.photos/200',\n            website: user.website,\n            bio: user.bio,\n            docId: user.docId\n        }\n    }\n}\n\nexport const authenticateUser = () => {\n    return {\n        type: types.USER_AUTHENTICATED,\n        payload: {\n            authenticated: true\n        }\n    }\n}\n\nexport const disconnectUser = () => {\n    return {\n        type: types.USER_DISCONNECTED,\n        payload: {\n            authenticated: false\n        }\n    }\n}\n\nexport const updateChannels = channels => {\n    return {\n        type: types.CHANNEL_LIST,\n        payload: {\n            channels\n        }\n    }\n}\n\nexport const channelChange = channel => {\n    return {\n        type: types.CHANNEL_CHANGE,\n        payload: {\n           channel\n        }\n    }\n}\n\nexport const updateMessages = messages => {\n    return {\n        type: types.MESSAGE_ADDED,\n        payload: {\n            messages\n        }\n    }\n}\n\nexport const getMessages = messages => {\n    return {\n        type: types.GET_MESSAGES,\n        payload: {\n            ...messages\n        }\n    }\n}\n\nexport const addComment = comments => {\n    return{\n        type: types.ADD_COMMENT,\n        payload: {\n            comments\n        }\n    }\n}","import firebase from 'firebase'\n//import FIREBASE from '../keys'\n\nconst FIREBASE = {\n    apiKey: \"AIzaSyAHzS-BpuOpzmNVs6fcyGwP5_9C-38tx-g\",\n    authDomain: \"classroomchatter-a7f90.firebaseapp.com\",\n    databaseURL: \"https://classroomchatter-a7f90.firebaseio.com\",\n    projectId: \"classroomchatter-a7f90\",\n    storageBucket: \"classroomchatter-a7f90.appspot.com\",\n    messagingSenderId: \"416988184247\",\n    appId: \"1:416988184247:web:e25ee91765ef93607ed732\",\n    measurementId: \"G-CR305YY5T9\"\n}\n\nconst firebaseConfig = FIREBASE\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebased = firebase\nexport const db = firebase.firestore()\n\n","import { db } from \"../services/firebase\";\n\nexport function addUser(user) {\n  return db.collection(\"users\").add({\n    id: user.uid,\n    displayName: user.displayName,\n    photoURL: user.photoURL,\n  });\n}\n\nexport function getUserData(userId) {\n    const userPromise = new Promise((resolve, reject) => {\n        return db.collection(\"users\").where(\"uid\", \"==\", userId).get().then((query) => {\n          query.forEach((user) => {\n              console.log('this is from db getUserData',user.id)\n            resolve({ ...user.data(), docId: user.id });\n          });\n        },\n          (rej) => {console.log('This is from the userPromise', userId)});\n    })\n    return userPromise\n}\n\nexport function updateUser(user, newFields) {\n  db.collection(\"users\")\n    .doc(user.docId)\n    .update({ ...newFields })\n    .then(() => {\n    }, rej => {\n        console.log(rej)\n    });\n}\n\nexport function signUpUser(user) {\n  return db.collection(\"users\").add({\n    ...user, dateCreated: new Date()\n  });\n}\nexport function addChannel(channel) {\n  return db.collection(\"channels\").add({\n    name: channel.name,\n    creatorId: channel.uid,\n    dateCreated: new Date(),\n    members: [],\n    public: true,\n  });\n}\n\nexport function getChannels() {\n  const channelsPromise = new Promise((resolve, reject) => {\n    db.collection(\"channels\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return channelsPromise;\n}\n\nexport function getMessages() {\n  const messagesPromise = new Promise((resolve, reject) => {\n    db.collection(\"messages\")\n      .orderBy(\"dateCreated\", \"desc\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return messagesPromise;\n}\nexport function getComments() {\n  const commentsPromise = new Promise((resolve, reject) => {\n    db.collection(\"comments\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return commentsPromise;\n}\nexport function getChannel(channelName) {\n  const channelsPromise = new Promise((resolve, reject) => {\n    db.collection(\"channels\")\n      .where(\"name\", \"==\", channelName)\n      .get()\n      .then((query) => {\n        resolve(query);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n  return channelsPromise;\n}\n\nexport function addMessage(messageObject, channelRef, userRef) {\n  db.collection(\"messages\")\n    .add({\n      body: messageObject,\n      channelId: channelRef.docId,\n      userId: userRef.userId,\n      userImg: userRef.photoURL,\n      displayName: userRef.displayName,\n      dateCreated: new Date(),\n    })\n    .then(() => {\n      console.log(\"new message created\");\n    })\n    .catch((error) => {\n      console.log(\"failure\", error);\n    });\n}\n\nexport function addMessageComment(commentObject) {\n  db.collection(\"comments\").add({ ...commentObject, dateCreated: new Date() });\n}\n","import { Button, CardHeader, IconButton, Card, TextField, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { channelChange, updateChannels } from \"../actions\";\nimport { getChannels, addChannel } from \"../helpers/db\";\n\nconst ChannelDisplay = () => {\n  const [channel, setChannel] = useState(\"\");\n  const [newChannelButton, setChannelButton] = useState(false);\n  const [ownChannelSelect, setOwnChannelSelect] = useState();\n\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  useEffect(() => {\n    getChannels().then((response) => {\n      const channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      dispatch(updateChannels(channels));\n    });\n  }, []);\n\n  const handleChannelChange = (channel) => {\n    dispatch(channelChange(channel));\n    console.log(store.getState().channels.selectedChannel.docId);\n  };\n\n  const handleAddChannel = (event) => {\n    event.preventDefault();\n    addChannel({ name: channel, uid: store.getState().user.uid }); // TODO: implement proper messaging\n    getChannels().then((response) => {\n      let channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      dispatch(updateChannels(channels));\n    });\n    setChannel(\"\");\n  };\n\n  const handleChannelNameChange = (event) => {\n    console.log('changed name of channel to')\n  }\n  const handleChannelDelete = (event) => {\n    console.log('deleted Channel')\n  }\n  return (\n    <Card className=\"channel-display\">\n      <CardHeader className=\"channel-header\"\n       title={<Typography variant=\"h6\" display=\"inline\">\n          All Channels <IconButton\n          className=\"create-channel-button custom-button\"\n          onClick={() => setChannelButton(!newChannelButton)}\n        >\n          +\n        </IconButton>\n        </Typography>}/>\n   \n        \n        {newChannelButton && (\n          <form>\n            <TextField\n              variant=\"standard\"\n              type=\"text\"\n              fullWidth=\"true\"\n              onChange={(e) => setChannel(e.target.value)}\n              label=\"Enter channel name...\"\n              value={channel}\n            />\n            <Button\n              color=\"primary\"\n              size=\"medium\"\n              type=\"submit\"\n              onClick={handleAddChannel}\n            >\n              Add Channel\n            </Button>\n            <Button\n              color=\"secondary\"\n              size=\"medium\"\n              type=\"submit\"\n              onClick={() => setChannelButton(false)}\n            >\n              Cancel\n            </Button>\n          </form>\n        )}\n\n      {store.getState().channels.allChannels.map((channel) => {\n        return (channel.docId === store.getState().channels.selectedChannel.docId) ? (\n          <Button\n            key={channel.docId}\n            variant=\"contained\"\n            fullWidth={true}\n            color=\"primary\"\n            onClick={() => handleChannelChange(channel)}\n          >\n            {channel.name}\n          </Button>\n        ) : (\n          <Button\n            key={channel.docId}\n            variant=\"text\"\n            fullWidth={true}\n            onClick={() => handleChannelChange(channel)}\n          >\n            {channel.name}\n          </Button>\n        );\n      })}\n      <CardHeader title={<Typography variant=\"h6\" display=\"inline\">Your Channels</Typography>}/>\n      {store.getState().channels.allChannels.map((channel) => {\n        let result = {};\n         if(channel.creatorId === store.getState().user.userId) {\n          result = <Button\n            key={channel.docId}\n            variant=\"text\"\n            fullWidth={true}\n            onClick={() => setOwnChannelSelect(channel.docId)}\n          >\n            {channel.name}\n          </Button>\n        } else if (channel.creatorId === store.getState().user.userId && ownChannelSelect === channel.docId) {\n          console.log('ding')\n          result = <> <Button\n            key={channel.docId}\n            variant=\"contained\"\n            fullWidth={true}\n            onClick={() => setOwnChannelSelect('')}\n          >\n            {channel.name}\n          </Button>\n          <Button variant=\"text\" fullWidth={true} onClick={() => handleChannelNameChange} color=\"primary\">Change Name</Button>\n          <Button variant=\"text\" fullWidth={true} onClick={() => handleChannelDelete} color=\"secondary\">Delete</Button></>\n        }\n        return result\n\n      })}\n    </Card>\n  );\n};\n\nexport default ChannelDisplay;\n","import { Avatar, IconButton, Card, CardContent, CardHeader, List, ListItem, ListItemAvatar, ListItemText, TextField, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { addMessageComment, getComments } from \"../helpers/db\";\nimport { addComment } from \"../actions\";\n\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport SendRounded from \"@material-ui/icons/SendRounded\"\n\n\nconst MessageCard = (props) => {\n  const [comment, setComment] = useState(\"\");\n  const [like, setLike] = useState(false)\n  const dispatch = useDispatch();\n  const store = useStore();\n  useEffect(() => {\n    getComments().then((response) => {\n      const comments = [];\n      response.forEach((comment) => {\n        comments.push({ ...comment.data(), docId: comment.id });\n      });\n      if(comments !== []) dispatch(addComment(comments));\n    });\n  }, []);\n\n  const handleComment = async () => {\n    let comments = [];\n    addMessageComment({\n      commentBody: comment,\n      userId: store.getState().user.userId,\n      userImg: store.getState().user.photoURL,\n      displayName: store.getState().user.displayName,\n      messageId: props.docId,\n    });\n    await getComments().then((response) => {\n      response.forEach((commentDoc) => {\n        comments.push({ ...commentDoc.data(), docId: commentDoc.id });\n      });\n    });\n    dispatch(addComment(comments));\n    setComment(\"\");\n  };\n\n  const displayComments = () => {\n    const result = store.getState().posts.comments.map((comment) => {\n      if (comment.messageId === props.docId) {\n        return (\n          <div key={comment.docId}>\n            <List dense={true}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar\n                    variant=\"rounded\"\n                      src={comment.userImg}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={comment.displayName}\n                    secondary={comment.commentBody}\n                  />\n                </ListItem>\n            </List>\n          </div>\n        );\n      }\n    });\n    return result;\n  };\n\n  return (\n    <Card className=\"message-card\">\n      <CardHeader\n        avatar={<Avatar src={props.userImg} />}\n        title={\n          <Typography variant=\"h6\" className=\"message-title\">\n            {props.username}\n          </Typography>\n        }\n      />\n      <CardContent>\n        <Typography variant=\"body1\" className=\"message-body\">\n          {props.messageBody}\n        </Typography>\n        {displayComments()}\n      </CardContent>\n        <TextField\n          placeholder=\"Post a comment!\"\n          //id=\"outlined-multiline-static\"\n          label=\"Post a comment!\"\n          multiline\n          fullwidth=\"true\"\n          rows={1}\n          value={comment}\n          variant=\"outlined\"\n          onChange={(e) => setComment(e.target.value)}\n          className=\"comment-box\"\n        />\n        <IconButton\n          type=\"button\"\n          variant=\"contained\"\n          className=\"post-button\"\n          color=\"primary\"\n          disabled={comment !== \"\" ?  false:  true}\n          onClick={handleComment}\n        >\n          <SendRounded />\n        </IconButton>\n        <IconButton variant=\"contained\" className=\"like-button\" onClick={(e) => setLike(!like)}>\n          {like ? <Favorite color=\"primary\"/> :  <FavoriteBorder /> }\n        </IconButton>\n    </Card>\n  );\n};\n\nexport default MessageCard;\n","import React from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useStore } from 'react-redux'\nimport { Avatar, Button, Card, CardContent, CardHeader, TextField, Typography } from \"@material-ui/core\";\nimport { addMessage, getMessages,  } from '../helpers/db'\nimport { updateMessages } from '../actions'\n\nconst MessageTextArea = (props) => {\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const handleMessageSubmit = (event) => {\n        event.preventDefault()\n        addMessage( message, props.selectedChannel, props.user);\n        getMessages().then(response => {\n            let messages = [];\n            response.forEach(message => {\n                messages.push({ ...message.data(), docId: message.id });\n            })\n            dispatch(updateMessages(messages));\n        });\n        setMessage('');\n    }\n\n    return (\n        <Card className=\"message-card\">\n        <CardHeader\n          avatar={<Avatar src={store.getState().user.photoURL} />}\n          title={\n            <Typography variant=\"h6\" className=\"message-title\">\n              {props.user.displayName}\n            </Typography>\n          }\n        />\n        <CardContent>\n          <Typography variant=\"body1\" className=\"message-body\">\n              Write new posts here!\n          </Typography>\n        </CardContent>\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Create a new post!\"\n            multiline\n            fullwidth=\"true\"\n            rows={2}\n            variant=\"outlined\"\n            className=\"comment-box\"\n            onChange={e => setMessage(e.target.value)} \n            value={message}\n          />\n           <Button\n           id=\"post-button\"\n          type=\"button\"\n          variant=\"contained\"\n          className=\"post-button\"\n          color=\"primary\"\n          disabled={(message !== '' && props.selectedChannel.name !== 'default') ? false: true}\n          onClick={handleMessageSubmit}\n        >\n          Post!\n        </Button>\n      </Card>\n        // <Card elevation={15} className=\"message-input-box\">\n        //     {console.log(props.user)}\n        //     <TextField className=\"comment-box\" color=\"primary\" label=\"Write a post!\" variant=\"standard\" fullwidth=\"true\" rows={2} multiline={true} onChange={e => setMessage(e.target.value)} value={message}/>\n        //     <Button variant=\"contained\" color=\"primary\" disabled={(message !== '' && props.selectedChannel.name !== 'default') ? false: true} onClick={handleMessageSubmit}>Send</Button>\n        // </Card>\n    )\n}\n\nexport default MessageTextArea","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IconButton, Card, CardHeader, Avatar, TextField, Typography, CardContent } from \"@material-ui/core\";\n\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <Card className=\"profile-area\">\n        <CardHeader \n          className=\"profile-name\" \n          title={\n          <Typography variant=\"h5\" className=\"message-title\">\n            {this.props.user.firstName + \" \" + this.props.user.lastName}\n          </Typography>}\n          subheader={<Typography className=\"profile-name\">{this.props.user.displayName}</Typography>}>\n        </CardHeader>\n        <div className=\"profile-image\">\n          <img\n            alt=\"user avatar\"\n            className=\"profile-img\"\n            src={this.props.user.photoURL}\n          />\n        </div>\n        <CardContent className=\"profile-field-value\">{this.props.user.email}</CardContent>\n        <CardContent className=\"profile-field-value\">{this.props.user.website}</CardContent>\n        <CardContent className=\"profile-field-value\">{this.props.user.bio}</CardContent>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import { Container, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateChannels, updateMessages } from \"../actions\";\nimport ChannelDisplay from \"../components/ChannelDisplay\";\nimport MessageCard from \"../components/MessageCard\";\nimport MessageTextArea from \"../components/MessageTextArea\";\nimport { getMessages, getChannels } from \"../helpers/db\";\nimport Profile from \"./Profile\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    getMessages().then((response) => {\n      let messages = [];\n      response.forEach((message) => {\n        messages.push({ ...message.data(), docId: message.id });\n      });\n      this.props.updateMessages(messages);\n    });\n\n    getChannels().then((response) => {\n      const channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      this.props.updateChannels(channels);\n    });\n  }\n\n  displayChannelMessages = () => {\n    const { selectedChannel, posts } = this.props;\n    const { messages } = posts;\n    const result = messages.map((message, index) => {\n      if (message.channelId === selectedChannel.docId)\n        return (\n          <MessageCard\n            channelId={selectedChannel.docId}\n            key={index}\n            messageBody={message.body}\n            userImg={message.userImg}\n            username={message.displayName}\n            docId={message.docId}\n          />\n        );\n    });\n    return result;\n  };\n\n  render() {\n    return (\n      //<div className=\"home-container\">\n      <Grid container direction=\"row\" justify=\"center\" >\n          <Grid item xs={3} >\n        {/* <div className=\"channel-container\"> */}\n          <ChannelDisplay />\n        {/* </div> */}\n        </Grid>\n        {/* <div className=\"message-container\"> */}\n          <Grid item xs={6}>\n          <MessageTextArea user={this.props.user} selectedChannel={this.props.selectedChannel}/>\n            {this.displayChannelMessages()}\n\n          </Grid>\n        {/* </div> */}\n        {/* <div className=\"profile-container\"> */}\n        <Grid item xs={3}>\n        <Profile />\n        </Grid>\n        {/* </div> */}\n    </Grid>\n      //</div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selectedChannel: state.channels.selectedChannel,\n  posts: state.posts,\n  user: state.user,\n});\n\nconst mapDispatchToProps = {\n  updateChannels,\n  updateMessages,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { firebased } from '../services/firebase'\n\nexport function signUpWithEmail(email, password) {\n    return firebased.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n        console.log('Sign up with email failed' ,error)\n    })\n}\n\nexport function loginWithEmail(email, password){\n    return firebased.auth().signInWithEmailAndPassword(email, password).catch(error => {console.log(error)})\n}\n\nexport function signInWithGoogle() {\n    let provider = new firebased.auth.GoogleAuthProvider()\n    return firebased.auth().signInWithPopup(provider)\n}\n\nexport function logOut() {\n    return firebased.auth().signOut()\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GoogleButton from \"react-google-button\";\n\nimport { loginWithEmail, signInWithGoogle } from \"../helpers/auth\";\nimport { authenticateUser, getUser } from \"../actions\";\nimport { getUserData } from \"../helpers/db\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      Travis Heffelfinger\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction LoginPage() {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [error, setError] = useState(false);\n\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  const classes = useStyles();\n\n  async function handleEmailSignIn(event) {\n    event.preventDefault();\n    let userResponse = await loginWithEmail(email, password);\n    console.log('made it this far')\n    try {\n        getUserData(userResponse.user.uid).then(\n      (resolve) => {\n          dispatch(getUser(resolve));\n          dispatch(authenticateUser());\n          console.log(store.getState());\n      },\n      (reject) => {\n        console.log(reject);\n      }\n        );\n    } catch(error) {\n        console.log('this error came from catch ' + error)\n        setError('Invalid email or password');\n    }\n    \n    \n  }\n\n  async function loginWithGoogle(event) {\n    event.preventDefault();\n    let userResponse = await signInWithGoogle();\n    console.log(userResponse);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleEmailSignIn}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={error}\n            helperText={error ? 'Invalid email or password': ''}\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <FormControlLabel\n            id=\"remember-me\"\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            id=\"login-button\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <div >\n              <GoogleButton\n              className=\"google-button\"\n            fullwidth=\"true\"\n            variant=\"contained\"\n            type=\"light\"\n            onClick={loginWithGoogle}\n          /></div>\n        \n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/#/home\" variant=\"body2\">\n                {\" \"}\n                Forgot Password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/#/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react'\n\nimport Login from '../styles/testlogin'\n\nclass LandingPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Login />\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React from \"react\";\nimport { signUpUser } from \"../helpers/db\";\nimport { signUpWithEmail } from \"../helpers/auth\";\nimport { firebased } from \"../services/firebase\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { authenticateUser, getUser } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Button, InputLabel, TextField, Typography, Grid, Link as MUILink} from \"@material-ui/core\";\n\nclass SignUpPage extends React.Component {\n  state = {\n    authenticated: false,\n    disabled: true,\n    firstName: '',\n    lastName: '',\n    displayName: '',\n    email: '',\n    password: '',\n    website: '',\n    bio: ''\n  }\n\n\n  handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n        if (this.state.email && this.state.password && this.state.displayName) {\n            this.setState({disabled: false})\n        } \n    }\n\n  handleSignUp = async (event) => {\n    event.preventDefault();\n    let user;\n    if (this.state.email && this.state.password && this.state.displayName) {\n      await signUpWithEmail(this.state.email, this.state.password);\n      let authedUser = firebased.auth().currentUser;\n      if (authedUser !== null) {\n        user = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          displayName: this.state.displayName,\n          uid: authedUser.uid,\n          email: this.state.email,\n          photoURL: authedUser.photoURL || \"https://picsum.photos/200\",\n          website: this.state.website,\n          bio: this.state.bio,\n        };\n\n        await signUpUser(user);\n        this.setState({ authenticated: true });\n        this.props.getUser(user);\n        this.props.authenticateUser();\n      } else {\n        console.log(\"signup failed\");\n      }\n    } else {\n      console.log(\"non valid email or password\");\n    }\n  }\n\n  render() {\n    if (this.state.authenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Grid container\n      spacing={2}\n       direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      className=\"signup-container\">\n        <Typography variant=\"h3\">Welcome to Classroom Chatter!</Typography>\n          <form>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.email}\n                label=\"Email\"\n                autoFocus={true}\n                fullWidth={true}\n                required={true}\n                className=\"signup-input\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                variant=\"outlined\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.password}\n                required={true}\n                variant=\"outlined\"\n                label=\"Password\"\n                fullWidth={true}\n                className=\"signup-input\"\n                id=\"password\"\n                helperText=\"Must be at least 6 characters\"\n                name=\"password\"\n                type=\"password\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.displayName}\n                required={true}\n                label=\"Username\"\n                variant=\"outlined\"\n                fullWidth={true}\n                className=\"signup-input\"\n                id=\"displayName\"\n                name=\"displayName\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.firstName}\n                className=\"signup-input\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                id=\"firstName\"\n                name=\"firstName\"\n                fullWidth={true}\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.lastName}\n                className=\"signup-input\"\n                id=\"lastName\"\n                variant=\"outlined\"\n                name=\"lastName\"\n                label=\"Last Name\"\n                fullWidth={true}\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.website}\n                className=\"signup-input\"\n                variant=\"outlined\"\n                id=\"website\"\n                name=\"website\"\n                fullWidth={true}\n                label=\"Website\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                value={this.state.bio}\n                className=\"signup-input\"\n                variant=\"outlined\"\n                id=\"bio\"\n                name=\"bio\"\n                fullWidth={true}\n                type=\"text\"\n                label=\"Bio\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={8} className=\"signup-button\">\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                onClick={this.handleSignUp}\n                disabled={this.state.disabled}\n              >\n                Create Account\n              </Button>\n            </Grid>\n            <InputLabel className=\"signup-label\">\n            <MUILink variant=\"body2\"><Link to=\"/login\"> Already have an account? sign in</Link></MUILink>\n            </InputLabel>\n          </form>\n        </Grid>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = {\n  authenticateUser,\n  getUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage);\n","import { Button, Paper, AppBar, Toolbar } from '@material-ui/core';\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom'\nimport { firebased } from '../services/firebase'\nimport { disconnectUser } from '../actions'\n\nfunction NavBar() {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        firebased.auth().signOut();\n        dispatch(disconnectUser())\n    }\n    \n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"nav-container\">\n          <NavLink to=\"/edit\">\n            <Button className=\"nav-link-button\" variant=\"text\">\n              Edit Profile\n            </Button>\n          </NavLink>\n          <NavLink to=\"/\">\n            <Button\n              className=\"nav-link-button\"\n              variant=\"text\"\n              color=\"default\"\n            >\n              Home\n            </Button>\n          </NavLink>\n          <Button\n            variant=\"text\"\n            color=\"secondary\"\n            className=\"nav-link-button\"\n            onClick={signout}\n          >\n            Log Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n}\n\nexport default NavBar\n","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { getUserData, updateUser } from \"../helpers/db\";\nimport { Redirect } from \"react-router-dom\";\nimport {getUser} from '../actions'\nconst Edit = (props) => {\n    \n  const dispatch = useDispatch();\n  const store = useStore();\n  const [email, setEmail] = useState(store.getState().user.email);\n  const [displayName, setDisplayName] = useState(\n    store.getState().user.displayName\n  );\n  const [firstName, setFirstName] = useState(store.getState().user.firstName);\n  const [lastName, setLastName] = useState(store.getState().user.lastName);\n  const [website, setWebsite] = useState(store.getState().user.website);\n  const [bio, setBio] = useState(store.getState().user.bio);\n  const [updated, setUpdated] = useState(false);\n  useEffect(() => {\n    let userData;\n    let userResponse;\n    async function getUserInfo() {\n      userResponse = await firebase.auth().currentUser;\n      console.log(userResponse)\n      userData = await getUserData(userResponse.uid);\n    }\n    getUserInfo();\n  }, []);\n\n  const handleEditUser = () => {\n    let user = {\n      firstName,\n      lastName,\n      displayName,\n      email,\n      website,\n      bio,\n    };\n    updateUser(store.getState().user, user);\n    dispatch()\n    setUpdated(true);\n  };\n\n  return (\n    <Grid container>\n      {store.getState().auth.authenticated === false || updated ? (\n        <Redirect to=\"/\" />\n      ) : null}\n      <Grid item xs={8} className=\"signup-form-container\">\n        <form>\n          <div>\n            <TextField\n              value={email}\n              label=\"Email\"\n              autoFocus={true}\n              required={true}\n              className=\"signup-input\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={displayName}\n              required={true}\n              label=\"Username\"\n              className=\"signup-input\"\n              id=\"displayName\"\n              name=\"displayName\"\n              type=\"text\"\n              onChange={(e) => setDisplayName(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={firstName}\n              className=\"signup-input\"\n              label=\"First Name\"\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={lastName}\n              className=\"signup-input\"\n              id=\"lastName\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              type=\"text\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={website}\n              className=\"signup-input\"\n              id=\"website\"\n              name=\"website\"\n              label=\"Website\"\n              type=\"text\"\n              onChange={(e) => setWebsite(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={bio}\n              className=\"signup-input\"\n              id=\"bio\"\n              name=\"bio\"\n              type=\"text\"\n              label=\"Bio\"\n              onChange={(e) => setBio(e.target.value)}\n            />\n          </div>\n          <div className=\"signup-button\">\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              color=\"primary\"\n              onClick={handleEditUser}\n            >\n              Update Profile\n            </Button>\n          </div>\n        </form>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Edit;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Home from \"../pages/Home\";\nimport LandingPage from \"../pages/LandingPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport NavBar from \"../components/NavBar\";\nimport { updateChannels, updateMessages } from \"../actions\";\nimport { Container } from \"@material-ui/core\";\nimport Edit from './Edit'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Container className=\"app-container\">\n          {this.props.authenticated && <NavBar />}\n\n          {this.props.authenticated ? (\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/edit\" component={Edit} />\n              <Route component={Home} />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route exact path=\"/\" component={LandingPage} />\n              <Route exact path=\"/login\" component={LandingPage} />\n              <Route exact path=\"/signup\" component={SignUpPage} />\n            </Switch>\n          )}\n        </Container>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = {\n  updateChannels,\n  updateMessages,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport types from \"../helpers/types\";\n\nlet defaultUser = {\n  bio: \"I am the first test of Signup\",\n  displayName: \"ExampleProject\",\n  email: \"test@email.com\",\n  firstName: \"Travis\",\n  lastName: \"Heffelfinger\",\n  photoURL: \"http://picsum.photos/200\",\n  userId: \"dwCGwI2rwBc42CIQHS8jIJ5ZQR12\",\n  website: \"website\",\n};\n\nfunction authReducer(state = { authenticated: false }, action) {\n  if (action.type === types.USER_AUTHENTICATED) {\n    return { ...state, authenticated: action.payload.authenticated };\n  } else if (action.type === types.USER_DISCONNECTED) {\n    return { ...state, authenticated: action.payload.authenticated };\n  }\n  return state;\n}\n\nfunction userReducer(state = { ...defaultUser }, action) {\n  if (action.type === types.GET_USER) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n}\n\nfunction postsReducer(state = { messages: [], comments: [] }, action) {\n  if (action.type === types.MESSAGE_ADDED) {\n    return { ...state, ...action.payload };\n  } else if (action.type === types.ADD_COMMENT) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n}\n\nfunction channelReducer(\n  state = {\n    selectedChannel: {\n      creatorId: \"default\",\n      dateCreated: \"00:00:00\",\n      name: \"default\",\n      public: true,\n      members: [],\n      docId: \"6I5S8EZ6wdMEk4DRHY5b\",\n    },\n    allChannels: [],\n  },\n  action\n) {\n  if (action.type === types.CHANNEL_CHANGE) {\n    return { ...state, selectedChannel: action.payload.channel };\n  } else if (action.type === types.CHANNEL_ADD) {\n    return state;\n  } else if (action.type === types.CHANNEL_LIST) {\n    return { ...state, allChannels: action.payload.channels };\n  }\n  return state;\n}\n\nexport default combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  posts: postsReducer,\n  channels: channelReducer,\n});\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { createStore } from 'redux'\n\nimport App from './components/App'\nimport './index.css'\n\nimport reducers from './reducers'\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode> \n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}