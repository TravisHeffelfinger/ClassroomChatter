{"version":3,"sources":["services/firebase.js","keys.js","helpers/types.js","Redux/actions/index.js","components/NavBar.js","helpers/db.js","components/ChannelDisplay.js","components/MessageCard.js","components/MessageTextArea.js","pages/Profile.js","pages/Home.js","components/Edit.js","components/PrivateSwitch.js","helpers/auth.js","components/Login.js","pages/LandingPage.js","pages/Register.js","components/PublicSwitch.js","components/App.js","Redux/reducers/index.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebased","db","firestore","types","USER_AUTHENTICATED","USER_DISCONNECTED","GET_USER","MESSAGE_ADDED","ADD_COMMENT","CHANNEL_CHANGE","CHANNEL_ADD","CHANNEL_LIST","storeUser","user","type","payload","userId","uid","displayName","email","firstName","lastName","photoURL","website","bio","docId","authenticateUser","authenticated","updateChannels","channels","updateMessages","messages","addComment","comments","NavBar","dispatch","useDispatch","AppBar","position","Toolbar","className","to","style","textDecoration","Button","variant","color","onClick","auth","signOut","updateUser","newFields","collection","doc","update","then","rej","signUpUser","add","dateCreated","Date","getChannels","Promise","resolve","reject","get","query","getMessages","orderBy","getComments","ChannelDisplay","useState","channel","setChannel","newChannelButton","setChannelButton","ownChannelSelect","setOwnChannelSelect","store","useStore","useEffect","response","forEach","push","data","id","handleChannelChange","channelChange","console","log","getState","selectedChannel","handleChannelNameChange","event","handleChannelDelete","Card","CardHeader","title","Typography","display","TextField","fullWidth","onChange","e","target","value","label","size","preventDefault","name","creatorId","members","public","addChannel","allChannels","map","key","IconButton","result","MessageCard","props","comment","setComment","like","setLike","handleComment","a","commentObject","commentBody","userImg","messageId","commentDoc","avatar","Avatar","src","username","CardContent","messageBody","posts","List","dense","ListItem","ListItemAvatar","ListItemText","primary","secondary","multiline","fullwidth","rows","disabled","MessageTextArea","message","setMessage","messageObject","channelRef","userRef","body","channelId","catch","error","Profile","state","edit","this","setState","newUser","handleInput","setEdit","placeholder","alt","updateProfile","undefined","subheader","React","Component","mapDispatchToProps","connect","Home","displayChannelMessages","index","Grid","container","direction","justify","item","xs","Edit","setEmail","setDisplayName","setFirstName","setLastName","setWebsite","setBio","updated","setUpdated","autoFocus","required","PrivateSwitch","exact","path","component","signUpWithEmail","password","createUserWithEmailAndPassword","loginWithEmail","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","Copyright","align","Link","href","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","alignItems","margin","backgroundColor","palette","main","form","width","submit","LoginPage","setPassword","setError","classes","processUserData","userData","where","Container","maxWidth","CssBaseline","noValidate","onSubmit","helperText","autoComplete","FormControlLabel","control","Checkbox","Box","mt","LandingPage","Login","Register","handleChange","handleSignUp","authedUser","currentUser","getUser","InputLabel","underline","PublicSwitch","App","defaultUser","combineReducers","action","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"kUAGMA,ECHW,CACbC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBDHnBC,IAASC,cAAcV,GAEhB,IAAMW,EAAYF,IACZG,EAAKH,IAASI,YEGZC,EAXD,CACVC,mBAAqB,qBACrBC,kBAAoB,oBACpBC,SAAW,WACXC,cAAgB,gBAChBC,YAAc,cACdC,eAAiB,iBACjBC,YAAc,cACdC,aAAe,gBCNNC,EAAY,SAAAC,GACrB,MAAO,CACHC,KAAMX,EAAMG,SACZS,QAAS,CACLC,OAAQH,EAAKI,IACbC,YAAaL,EAAKK,YAClBC,MAAON,EAAKM,MACZC,UAAWP,EAAKO,UAChBC,SAAUR,EAAKQ,SACfC,SAAU,2BACVC,QAASV,EAAKU,QACdC,IAAKX,EAAKW,IACVC,MAAOZ,EAAKY,SAKXC,EAAmB,WAC5B,MAAO,CACHZ,KAAMX,EAAMC,mBACZW,QAAS,CACLY,eAAe,KAcdC,EAAiB,SAAAC,GAC1B,MAAO,CACHf,KAAMX,EAAMQ,aACZI,QAAS,CACLc,cAcCC,EAAiB,SAAAC,GAC1B,MAAO,CACHjB,KAAMX,EAAMI,cACZQ,QAAS,CACLgB,cAcCC,EAAa,SAAAC,GACtB,MAAM,CACFnB,KAAMX,EAAMK,YACZO,QAAS,CACLkB,cChCGC,MAtCf,WACI,IAAMC,EAAWC,cAOjB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASC,UAAU,iBACjB,kBAAC,IAAD,CAASC,GAAG,QAAQC,MAAO,CAACC,eAAgB,SAC1C,kBAACC,EAAA,EAAD,CAAQJ,UAAU,kBAAkBK,QAAQ,QAA5C,YAIF,kBAAC,IAAD,CAASJ,GAAG,IAAIC,MAAO,CAACC,eAAgB,SACtC,kBAACC,EAAA,EAAD,CACEJ,UAAU,kBACVK,QAAQ,OACRC,MAAM,WAHR,SAQF,kBAACF,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAM,YACNN,UAAU,kBACVO,QA1BQ,WACZ/C,EAAUgD,OAAOC,UACjBd,EDiBG,CACHrB,KAAMX,EAAME,kBACZU,QAAS,CACLY,eAAe,OCAjB,c,qFCVH,SAASuB,EAAWrC,EAAMsC,GAC/BlD,EAAGmD,WAAW,SACXC,IAAIxC,EAAKY,OACT6B,OAFH,eAEeH,IACZI,MAAK,eACH,SAAAC,OAIA,SAASC,EAAW5C,GACzB,OAAOZ,EAAGmD,WAAW,SAASM,IAAvB,2BACF7C,GADE,IACI8C,YAAa,IAAIC,QAavB,SAASC,IAMd,OALwB,IAAIC,SAAQ,SAACC,EAASC,GAC5C/D,EAAGmD,WAAW,YACXa,MACAV,MAAK,SAACW,GAAD,OAAWH,EAAQG,SAKxB,SAASC,IAOd,OANwB,IAAIL,SAAQ,SAACC,EAASC,GAC5C/D,EAAGmD,WAAW,YACXgB,QAAQ,cAAe,QACvBH,MACAV,MAAK,SAACW,GAAD,OAAWH,EAAQG,SAIxB,SAASG,IAMd,OALwB,IAAIP,SAAQ,SAACC,EAASC,GAC5C/D,EAAGmD,WAAW,YACXa,MACAV,MAAK,SAACW,GAAD,OAAWH,EAAQG,SCvD/B,IA6KeI,EA7KQ,WACrB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6CF,oBAAS,GAAtD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAgDJ,qBAAhD,mBAAOK,EAAP,KAAyBC,EAAzB,KAEM1C,EAAWC,cACX0C,EAAQC,cAEdC,qBAAU,WACRnB,IAAcN,MAAK,SAAC0B,GAClB,IAAMpD,EAAW,GACjBoD,EAASC,SAAQ,SAACV,GAChB3C,EAASsD,KAAT,2BAAmBX,EAAQY,QAA3B,IAAmC3D,MAAO+C,EAAQa,SAEpDlD,EAASP,EAAeC,SAEzB,IAEH,IAAMyD,EAAsB,SAACd,GAC3BrC,EHcyB,SAAAqC,GACzB,MAAO,CACH1D,KAAMX,EAAMM,eACZM,QAAS,CACNyD,YGlBEe,CAAcf,IACvBgB,QAAQC,IAAIX,EAAMY,WAAW7D,SAAS8D,gBAAgBlE,QAkBlDmE,EAA0B,SAACC,GAC/BL,QAAQC,IAAI,+BAERK,EAAsB,SAACD,GAC3BL,QAAQC,IAAI,oBAEd,OACE,kBAACM,EAAA,EAAD,CAAMvD,UAAU,mBACd,kBAACwD,EAAA,EAAD,CACExD,UAAU,iBACVyD,MACE,kBAACC,EAAA,EAAD,CAAYrD,QAAQ,KAAKsD,QAAQ,UAAjC,kBAMHzB,GACC,8BACE,kBAAC0B,EAAA,EAAD,CACEvD,QAAQ,WACR/B,KAAK,OACLuF,UAAU,OACVC,SAAU,SAACC,GAAD,OAAO9B,EAAW8B,EAAEC,OAAOC,QACrCC,MAAM,wBACND,MAAOjC,IAET,kBAAC5B,EAAA,EAAD,CACEE,MAAM,UACN6D,KAAK,SACL7F,KAAK,SACLiC,QA9Ce,SAAC8C,GACxBA,EAAMe,iBACNjC,GAAiB,GACjBa,QAAQC,IAAI,kBDHT,SAAoBjB,GAClBvE,EAAGmD,WAAW,YAAYM,IAAI,CACnCmD,KAAMrC,EAAQqC,KACdC,UAAWtC,EAAQvD,IACnB0C,YAAa,IAAIC,KACjBmD,QAAS,GACTC,QAAQ,ICFRC,CAAW,CAAEJ,KAAMrC,EAASvD,IAAK6D,EAAMY,WAAW7E,KAAKG,SACvD6C,IAAcN,MAAK,SAAC0B,GAClB,IAAIpD,EAAW,GACfoD,EAASC,SAAQ,SAACV,GAChB3C,EAASsD,KAAT,2BAAmBX,EAAQY,QAA3B,IAAmC3D,MAAO+C,EAAQa,SAEpDlD,EAASP,EAAeC,OAE1B4C,EAAW,MA8BL,eAQA,kBAAC7B,EAAA,EAAD,CACEE,MAAM,YACN6D,KAAK,SACL7F,KAAK,SACLiC,QAAS,kBAAM4B,GAAiB,KAJlC,WAWHG,EAAMY,WAAW7D,SAASqF,YAAYC,KAAI,SAAC3C,GAC1C,OAAOA,EAAQ/C,QACbqD,EAAMY,WAAW7D,SAAS8D,gBAAgBlE,MAC1C,kBAACmB,EAAA,EAAD,CACEwE,IAAK5C,EAAQ/C,MACboB,QAAQ,YACRwD,WAAW,EACXvD,MAAM,UACNC,QAAS,kBAAMuC,EAAoBd,KAElCA,EAAQqC,MAGX,kBAACjE,EAAA,EAAD,CACEwE,IAAK5C,EAAQ/C,MACboB,QAAQ,OACRwD,WAAW,EACXtD,QAAS,kBAAMuC,EAAoBd,KAElCA,EAAQqC,SAIf,kBAACb,EAAA,EAAD,CACEC,MACE,kBAACC,EAAA,EAAD,CAAYrD,QAAQ,KAAKsD,QAAQ,UAAjC,gBACgB,IACd,kBAACkB,EAAA,EAAD,CACE7E,UAAU,sCACVO,QAAS,kBAAM4B,GAAkBD,KAFnC,QASLI,EAAMY,WAAW7D,SAASqF,YAAYC,KAAI,SAAC3C,GAC1C,IAAI8C,EAAS,GA8Cb,OA7CI9C,EAAQsC,YAAchC,EAAMY,WAAW7E,KAAKG,OAC9CsG,EACE,kBAAC1E,EAAA,EAAD,CACEwE,IAAK5C,EAAQ/C,MACboB,QAAQ,OACRwD,WAAW,EACXtD,QAAS,kBAAM8B,EAAoBL,EAAQ/C,SAE1C+C,EAAQqC,MAIbrC,EAAQsC,YAAchC,EAAMY,WAAW7E,KAAKG,QAC5C4D,IAAqBJ,EAAQ/C,QAE7B6F,EACE,oCACG,IACD,kBAAC1E,EAAA,EAAD,CACEwE,IAAK5C,EAAQ/C,MACboB,QAAQ,YACRwD,WAAW,EACXtD,QAAS,kBAAM8B,EAAoB,MAElCL,EAAQqC,MAEX,kBAACjE,EAAA,EAAD,CACEC,QAAQ,OACRwD,WAAW,EACXtD,QAAS,kBAAM6C,GACf9C,MAAM,WAJR,eAQA,kBAACF,EAAA,EAAD,CACEC,QAAQ,OACRwD,WAAW,EACXtD,QAAS,kBAAM+C,GACfhD,MAAM,aAJR,YAWCwE,O,2ICrDAC,GAzGK,SAACC,GACnB,MAA8BjD,mBAAS,IAAvC,mBAAOkD,EAAP,KAAgBC,EAAhB,KACA,EAAwBnD,oBAAS,GAAjC,mBAAOoD,EAAP,KAAaC,EAAb,KACMzF,EAAWC,cACX0C,EAAQC,cACdC,qBAAU,WACRX,IAAcd,MAAK,SAAC0B,GAClB,IAAMhD,EAAW,GACjBgD,EAASC,SAAQ,SAACuC,GAChBxF,EAASkD,KAAT,2BAAmBsC,EAAQrC,QAA3B,IAAmC3D,MAAOgG,EAAQpC,SAEpDlD,EAASH,EAAWC,UAIxB,IAAM4F,EAAa,uCAAG,4BAAAC,EAAA,6DAChB7F,EAAW,GFkEe8F,EEjEZ,CAChBC,YAAaP,EACbzG,OAAQ8D,EAAMY,WAAW7E,KAAKG,OAC9BiH,QAASnD,EAAMY,WAAW7E,KAAKS,SAC/BJ,YAAa4D,EAAMY,WAAW7E,KAAKK,YACnCgH,UAAWV,EAAM/F,OF6DrBxB,EAAGmD,WAAW,YAAYM,IAA1B,2BAAmCqE,GAAnC,IAAkDpE,YAAa,IAAIC,QEpE7C,SASdS,IAAcd,MAAK,SAAC0B,GACxBA,EAASC,SAAQ,SAACiD,GAChBlG,EAASkD,KAAT,2BAAmBgD,EAAW/C,QAA9B,IAAsC3D,MAAO0G,EAAW9C,YAXxC,OAcpBlD,EAASH,EAAWC,IACpByF,EAAW,IAfS,iCFmEjB,IAA2BK,IEnEV,OAAH,qDA2CnB,OACE,kBAAChC,EAAA,EAAD,CAAMvD,UAAU,gBACd,kBAACwD,EAAA,EAAD,CACEoC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,IAAKd,EAAMS,UAC3BhC,MACE,kBAACC,EAAA,EAAD,CAAYrD,QAAQ,KAAKL,UAAU,iBAChCgF,EAAMe,YAIb,kBAACC,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CAAYrD,QAAQ,QAAQL,UAAU,gBACnCgF,EAAMiB,aApCE3D,EAAMY,WAAWgD,MAAMzG,SAASkF,KAAI,SAACM,GAClD,IAAIH,EAkBJ,OAjBIG,EAAQS,YAAcV,EAAM/F,QAC9B6F,EACE,yBAAKF,IAAKK,EAAQhG,OAChB,kBAACkH,EAAA,EAAD,CAAMC,OAAO,GACX,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACT,EAAA,EAAD,CAAQxF,QAAQ,UAAUyF,IAAKb,EAAQQ,WAEzC,kBAACc,EAAA,EAAD,CACEC,QAASvB,EAAQvG,YACjB+H,UAAWxB,EAAQO,kBAOxBV,MAqBP,kBAAClB,EAAA,EAAD,CACEM,MAAM,kBACNwC,WAAS,EACTC,UAAU,OACVC,KAAM,EACN3C,MAAOgB,EACP5E,QAAQ,WACRyD,SAAU,SAACC,GAAD,OAAOmB,EAAWnB,EAAEC,OAAOC,QACrCjE,UAAU,gBAEZ,kBAAC6E,EAAA,EAAD,CACEvG,KAAK,SACL+B,QAAQ,YACRL,UAAU,cACVM,MAAM,UACNuG,SAAsB,KAAZ5B,EACV1E,QAAS8E,GAET,kBAAC,KAAD,OAEF,kBAACR,EAAA,EAAD,CACExE,QAAQ,YACRL,UAAU,cACVO,QAAS,SAACwD,GAAD,OAAOqB,GAASD,KAExBA,EAAO,kBAAC,KAAD,CAAU7E,MAAM,YAAe,kBAAC,KAAD,SClDhCwG,GAhES,SAAC9B,GACrB,MAA8BjD,mBAAS,IAAvC,mBAAOgF,EAAP,KAAgBC,EAAhB,KACMrH,EAAWC,cACX0C,EAAQC,cAed,OACI,kBAACgB,EAAA,EAAD,CAAMvD,UAAU,gBAChB,kBAACwD,EAAA,EAAD,CACEoC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,IAAKxD,EAAMY,WAAW7E,KAAKS,WAC3C2E,MACE,kBAACC,EAAA,EAAD,CAAYrD,QAAQ,KAAKL,UAAU,iBAChCgF,EAAM3G,KAAKK,eAIlB,kBAACsH,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CAAYrD,QAAQ,QAAQL,UAAU,gBAAtC,0BAIA,kBAAC4D,EAAA,EAAD,CACEf,GAAG,4BACHqB,MAAM,qBACNwC,WAAS,EACTC,UAAU,OACVC,KAAM,EACNvG,QAAQ,WACRL,UAAU,cACV8D,SAAU,SAAAC,GAAC,OAAIiD,EAAWjD,EAAEC,OAAOC,QACnCA,MAAO8C,IAER,kBAAC3G,EAAA,EAAD,CACAyC,GAAG,cACJvE,KAAK,SACL+B,QAAQ,YACRL,UAAU,cACVM,MAAM,UACNuG,SAAuB,KAAZE,GAAiD,YAA/B/B,EAAM7B,gBAAgBkB,KACnD9D,QA9CsB,SAAC8C,GH2E1B,IAAoB4D,EAAeC,EAAYC,EG1E9C9D,EAAMe,iBH0Ea6C,EGzEPF,EHyEsBG,EGzEblC,EAAM7B,gBHyEmBgE,EGzEFnC,EAAM3G,KH0ExDZ,EAAGmD,WAAW,YACXM,IAAI,CACHkG,KAAMH,EACNI,UAAWH,EAAWjI,MACtBT,OAAQ2I,EAAQ3I,OAChBiH,QAAS0B,EAAQrI,SACjBJ,YAAayI,EAAQzI,YACrByC,YAAa,IAAIC,OAElBL,MAAK,eAELuG,OAAM,SAACC,GACNvE,QAAQC,IAAI,UAAWsE,MGrFrB5F,IAAcZ,MAAK,SAAA0B,GACf,IAAIlD,EAAW,GACfkD,EAASC,SAAQ,SAAAqE,GACbxH,EAASoD,KAAT,2BAAmBoE,EAAQnE,QAA3B,IAAmC3D,MAAO8H,EAAQlE,SAEtDlD,EAASL,EAAeC,OAE5ByH,EAAW,MA6BR,W,mBCnCLQ,G,4MACJC,MAAQ,CACN7I,UAAW,GACXC,SAAU,GACVH,YAAa,GACbC,MAAO,GACPI,QAAS,GACTC,IAAK,GACL0I,MAAM,G,6CAGR,WACE1E,QAAQC,IAAI0E,KAAKD,MACjBC,KAAKD,MAAQC,KAAKD,O,yBAGpB,SAAYrE,GACVsE,KAAKC,SAAL,gBAAiBvE,EAAMW,OAAOK,KAAOhB,EAAMW,OAAOC,U,2BAGpD,WACE,IAAI4D,EAAU,CACZjJ,UAAW+I,KAAKF,MAAM7I,UACtBC,SAAU8I,KAAKF,MAAM5I,SACrBH,YAAaiJ,KAAKF,MAAM/I,YACxBC,MAAOgJ,KAAKF,MAAM9I,MAClBI,QAAS4I,KAAKF,MAAM1I,QACpBC,IAAK2I,KAAKF,MAAMzI,KAElB0B,EAAWiH,KAAK3C,MAAM3G,KAAMwJ,GAC5BF,KAAK3C,MAAM5G,YACXuJ,KAAKC,SAAS,CAAEF,MAAM,M,oBAGxB,WAAU,IAAD,OACP,OAAIC,KAAKD,KAEL,kBAACnE,EAAA,EAAD,CAAMvD,UAAU,gBACd,kBAACwD,EAAA,EAAD,CAAYxD,UAAU,gBACpB,kBAAC4D,EAAA,EAAD,CACEE,SAAU,SAACC,GAAD,OAAO,EAAK+D,YAAY/D,IAClCM,KAAK,YACLH,MAAM,aACND,MAAO0D,KAAK3C,MAAM3G,KAAKO,YAEhBoE,QAAQC,IAAI,QACrB,kBAACW,EAAA,EAAD,CACEE,SAAU,SAACC,GAAD,OAAO,EAAK+D,YAAY/D,IAClCM,KAAK,WACLH,MAAM,YACND,MAAO0D,KAAK3C,MAAM3G,KAAKQ,WAEzB,kBAACgG,EAAA,EAAD,CAAYtE,QAAS,kBAAM,EAAKwH,YAC9B,kBAAC,KAAD,OAGF,kBAACnE,EAAA,EAAD,CACEE,SAAU,SAACC,GAAD,OAAO,EAAK+D,YAAY/D,IAClCM,KAAK,cACLrE,UAAU,eACVkE,MAAM,eACN8D,YAAaL,KAAK3C,MAAM3G,KAAKK,eAGjC,yBAAKsB,UAAU,iBACb,yBACEiI,IAAI,cACJjI,UAAU,cACV8F,IAAK6B,KAAK3C,MAAM3G,KAAKS,YAGzB,kBAAC8E,EAAA,EAAD,CACEE,SAAU,SAACC,GAAD,OAAO,EAAK+D,YAAY/D,IAClCM,KAAK,QACLH,MAAM,QACN8D,YAAaL,KAAK3C,MAAM3G,KAAKM,QAE/B,kBAACiF,EAAA,EAAD,CACEE,SAAU,SAACC,GAAD,OAAO,EAAK+D,YAAY/D,IAClCM,KAAK,UACLH,MAAM,UACN8D,YAAaL,KAAK3C,MAAM3G,KAAKU,UAE/B,kBAAC6E,EAAA,EAAD,CACEE,SAAU,SAACC,GAAD,OAAO,EAAK+D,YAAY/D,IAClCM,KAAK,MACLH,MAAM,MACN8D,YAAaL,KAAK3C,MAAM3G,KAAKW,MAE/B,kBAACoB,EAAA,EAAD,CACEE,MAAM,UACND,QAAQ,YACRE,QAAS,kBAAM,EAAK2H,kBAHtB,UAOA,kBAAC9H,EAAA,EAAD,CACEE,MAAM,YACND,QAAQ,YACRE,QAAS,kBAAM,EAAKwH,YAHtB,YASkB,IAAdJ,KAAKD,WAAgCS,IAAdR,KAAKD,KAElC,kBAACnE,EAAA,EAAD,CAAMvD,UAAU,gBACd,kBAACwD,EAAA,EAAD,CACExD,UAAU,eACVyD,MACE,kBAACC,EAAA,EAAD,CAAYrD,QAAQ,KAAKL,UAAU,iBAChC2H,KAAK3C,MAAM3G,KAAKO,UACf,IACA+I,KAAK3C,MAAM3G,KAAKQ,SAChB,UACF,kBAACgG,EAAA,EAAD,CAAYtE,QAAS,kBAAM,EAAKwH,YAC9B,kBAAC,KAAD,QAINK,UACE,kBAAC1E,EAAA,EAAD,CAAY1D,UAAU,gBACnB2H,KAAK3C,MAAM3G,KAAKK,eAIvB,yBAAKsB,UAAU,iBACb,yBACEiI,IAAI,cACJjI,UAAU,cACV8F,IAAK6B,KAAK3C,MAAM3G,KAAKS,YAGxBkE,QAAQC,IAAI,QAEb,kBAAC+C,EAAA,EAAD,CAAahG,UAAU,uBACpB2H,KAAK3C,MAAM3G,KAAKM,OAEnB,kBAACqH,EAAA,EAAD,CAAahG,UAAU,uBACpB2H,KAAK3C,MAAM3G,KAAKU,SAEnB,kBAACiH,EAAA,EAAD,CAAahG,UAAU,uBACpB2H,KAAK3C,MAAM3G,KAAKW,WAtClB,M,GAzGWqJ,IAAMC,WA2JtBC,GAAqB,CACzBnK,aAGaoK,gBARS,SAACf,GAAD,MAAY,CAClCpJ,KAAMoJ,EAAMpJ,QAO0BkK,GAAzBC,CAA6ChB,ICrKtDiB,G,4MAWJC,uBAAyB,WACvB,MAAmC,EAAK1D,MAAhC7B,EAAR,EAAQA,gBAkBR,OAlBA,EAAyB+C,MACjB3G,SACgBoF,KAAI,SAACoC,EAAS4B,GACpC,IAAI7D,EAaJ,OAZIiC,EAAQM,YAAclE,EAAgBlE,QACxC6F,EACE,kBAAC,GAAD,CACEuC,UAAWlE,EAAgBlE,MAC3B2F,IAAK+D,EACL1C,YAAac,EAAQK,KACrB3B,QAASsB,EAAQtB,QACjBM,SAAUgB,EAAQrI,YAClBO,MAAO8H,EAAQ9H,SAId6F,M,uDA3BX,WAAqB,IAAD,OAClBnD,IAAcZ,MAAK,SAAC0B,GAClB,IAAIlD,EAAW,GACfkD,EAASC,SAAQ,SAACqE,GAChBxH,EAASoD,KAAT,2BAAmBoE,EAAQnE,QAA3B,IAAmC3D,MAAO8H,EAAQlE,SAEpD,EAAKmC,MAAM1F,eAAeC,Q,oBA0B9B,WACE,OACE,kBAACqJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,UACtC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,CACE5K,KAAMsJ,KAAK3C,MAAM3G,KACjB8E,gBAAiBwE,KAAK3C,MAAM7B,kBAE7BwE,KAAKe,0BAER,kBAACE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,Y,GA/CSZ,IAAMC,WA4DnBC,GAAqB,CACzBnJ,iBACAE,kBAEakJ,gBAVS,SAACf,GAAD,MAAY,CAClCtE,gBAAiBsE,EAAMpI,SAAS8D,gBAChC+C,MAAOuB,EAAMvB,MACb7H,KAAMoJ,EAAMpJ,QAO0BkK,GAAzBC,CAA6CC,ICiD7CS,GArHF,WAEX,IAAMvJ,EAAWC,cACX0C,EAAQC,cACd,EAA0BR,mBAASO,EAAMY,WAAW7E,KAAKM,OAAzD,mBAAOA,EAAP,KAAcwK,EAAd,KACA,EAAsCpH,mBACpCO,EAAMY,WAAW7E,KAAKK,aADxB,mBAAOA,EAAP,KAAoB0K,EAApB,KAGA,EAAkCrH,mBAASO,EAAMY,WAAW7E,KAAKO,WAAjE,mBAAOA,EAAP,KAAkByK,EAAlB,KACA,EAAgCtH,mBAASO,EAAMY,WAAW7E,KAAKQ,UAA/D,mBAAOA,EAAP,KAAiByK,EAAjB,KACA,EAA8BvH,mBAASO,EAAMY,WAAW7E,KAAKU,SAA7D,mBAAOA,EAAP,KAAgBwK,EAAhB,KACA,EAAsBxH,mBAASO,EAAMY,WAAW7E,KAAKW,KAArD,mBAAOA,EAAP,KAAYwK,EAAZ,KACA,EAA8BzH,oBAAS,GAAvC,mBAAO0H,EAAP,KAAgBC,EAAhB,KAOAlH,qBAAU,cAEP,IAgBH,OACE,kBAACoG,EAAA,EAAD,CAAMC,WAAS,IAC4B,IAAxCvG,EAAMY,WAAW1C,KAAKrB,eAA2BsK,EAChD,kBAAC,IAAD,CAAUxJ,GAAG,MACX,KACJ,kBAAC2I,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGjJ,UAAU,yBAC1B,8BACI,kBAAC4D,EAAA,EAAD,CACEK,MAAOtF,EACPuF,MAAM,QACNyF,WAAW,EACXC,UAAU,EACV5J,UAAU,eACV6C,GAAG,QACHwB,KAAK,QACL/F,KAAK,OACLwF,SAAU,SAACC,GAAD,OAAOoF,EAASpF,EAAEC,OAAOC,UAErC,kBAACL,EAAA,EAAD,CACEK,MAAOvF,EACPkL,UAAU,EACV1F,MAAM,WACNlE,UAAU,eACV6C,GAAG,cACHwB,KAAK,cACL/F,KAAK,OACLwF,SAAU,SAACC,GAAD,OAAOqF,EAAerF,EAAEC,OAAOC,UAE3C,kBAACL,EAAA,EAAD,CACEK,MAAOrF,EACPoB,UAAU,eACVkE,MAAM,aACNrB,GAAG,YACHwB,KAAK,YACL/F,KAAK,OACLwF,SAAU,SAACC,GAAD,OAAOsF,EAAatF,EAAEC,OAAOC,UAEzC,kBAACL,EAAA,EAAD,CACEK,MAAOpF,EACPmB,UAAU,eACV6C,GAAG,WACHwB,KAAK,WACLH,MAAM,YACN5F,KAAK,OACLwF,SAAU,SAACC,GAAD,OAAOuF,EAAYvF,EAAEC,OAAOC,UAExC,kBAACL,EAAA,EAAD,CACEK,MAAOlF,EACPiB,UAAU,eACV6C,GAAG,UACHwB,KAAK,UACLH,MAAM,UACN5F,KAAK,OACLwF,SAAU,SAACC,GAAD,OAAOwF,EAAWxF,EAAEC,OAAOC,UAEvC,kBAACL,EAAA,EAAD,CACEK,MAAOjF,EACPgB,UAAU,eACV6C,GAAG,MACHwB,KAAK,MACL/F,KAAK,OACL4F,MAAM,MACNJ,SAAU,SAACC,GAAD,OAAOyF,EAAOzF,EAAEC,OAAOC,UAErC,yBAAKjE,UAAU,iBACb,kBAACI,EAAA,EAAD,CACEC,QAAQ,YACR/B,KAAK,SACLgC,MAAM,UACNC,QAnFW,WACrB,IAAIlC,EAAO,CACTO,YACAC,WACAH,cACAC,QACAI,UACAC,OAEF0B,EAAW4B,EAAMY,WAAW7E,KAAMA,GAClCsB,IACA+J,GAAW,KAoEH,uBCzFGG,GAVO,WAClB,OACI,kBAAC,IAAD,KACM,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,KACjC,kBAAC,IAAD,CAAOsB,KAAK,QAAQC,UAAWd,KAC/B,kBAAC,IAAD,CAAOc,UAAWvB,O,oGCZzB,SAASwB,GAAgBtL,EAAOuL,GACnC,OAAO1M,EAAUgD,OAAO2J,+BAA+BxL,EAAOuL,GAAU5C,OAAM,SAAAC,GAC1EvE,QAAQC,IAAI,4BAA6BsE,MAI1C,SAAS6C,GAAezL,EAAOuL,GAClC,OAAO1M,EAAUgD,OAAO6J,2BAA2B1L,EAAOuL,GAAU5C,OAAM,SAAAC,GAAUvE,QAAQC,IAAIsE,MAG7F,SAAS+C,KACZ,IAAIC,EAAW,IAAI/M,EAAUgD,KAAKgK,mBAClC,OAAOhN,EAAUgD,OAAOiK,gBAAgBF,GCQ5C,SAASG,KACP,OACE,kBAAChH,EAAA,EAAD,CAAYrD,QAAQ,QAAQC,MAAM,gBAAgBqK,MAAM,UACrD,kBACD,kBAACC,GAAA,EAAD,CAAMtK,MAAM,UAAUuK,KAAK,4BAA3B,uBAEQ,KACP,IAAIzJ,MAAO0J,cACX,KAKP,IAAMC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBzH,QAAS,OACT0H,cAAe,SACfC,WAAY,UAEd1F,OAAQ,CACN2F,OAAQN,EAAMG,QAAQ,GACtBI,gBAAiBP,EAAMQ,QAAQhF,UAAUiF,MAE3CC,KAAM,CACJC,MAAO,OACPT,UAAWF,EAAMG,QAAQ,IAE3BS,OAAQ,CACNN,OAAQN,EAAMG,QAAQ,EAAG,EAAG,QAmIjBU,OA/Hf,WACE,MAA0B/J,mBAAS,MAAnC,mBAAOpD,EAAP,KAAcwK,EAAd,KACA,EAAgCpH,mBAAS,MAAzC,mBAAOmI,EAAP,KAAiB6B,EAAjB,KACA,EAA0BhK,oBAAS,GAAnC,mBAAOwF,EAAP,KAAcyE,EAAd,KAEMrM,EAAWC,cAEXqM,EAAUlB,KAPG,4CASnB,WAAiC1H,GAAjC,SAAAiC,EAAA,6DACEjC,EAAMe,iBADR,SAE2BgG,GAAezL,EAAOuL,GAFjD,OAGEgC,EAHF,oDATmB,sBAenB,SAASA,EAAgBC,GACvB,KT7DwB3N,ES8DV2N,EAAS9N,KAAKI,IT7DR,IAAI6C,SAAQ,SAACC,EAASC,GACtC,OAAO/D,EAAGmD,WAAW,SAASwL,MAAM,MAAO,KAAM5N,GAAQiD,MAAMV,MAAK,SAACW,GACnEA,EAAMgB,SAAQ,SAACrE,GACbkD,EAAQ,2BAAKlD,EAAKuE,QAAX,IAAmB3D,MAAOZ,EAAKwE,YAGxC,SAAC7B,GAASQ,EAAOR,USuDUD,MAC7B,SAACQ,GACCyB,QAAQC,IAAR,wDAA6D1B,IAC7D5B,EAASvB,EAAUmD,IACnB5B,EAAST,QAEX,SAACsC,GACCwB,QAAQC,IAAIzB,MAGhB,MAAO+F,GACPvE,QAAQC,IAAI,8BAAgCsE,GAC5CyE,EAAS,6BT1ER,IAAqBxN,ES6CP,4CAiCnB,WAA+B6E,GAA/B,SAAAiC,EAAA,6DACEjC,EAAMe,iBADR,SAE2BkG,KAF3B,OAGE4B,EAHF,oDAjCmB,sBAwCnB,OACE,kBAACG,EAAA,EAAD,CAAWrC,UAAU,OAAOsC,SAAS,MACnC,kBAACC,GAAA,EAAD,MACA,yBAAKvM,UAAWiM,EAAQf,OACtB,kBAACrF,EAAA,EAAD,CAAQ7F,UAAWiM,EAAQrG,QACzB,kBAAC,KAAD,OAEF,kBAAClC,EAAA,EAAD,CAAYsG,UAAU,KAAK3J,QAAQ,MAAnC,WAGA,0BAAML,UAAWiM,EAAQN,KAAMa,YAAU,EAACC,SAlD7B,6CAmDX,kBAAC7I,EAAA,EAAD,CACEvD,QAAQ,WACRkL,OAAO,SACP3B,UAAQ,EACR/F,WAAS,EACT0D,MAAOA,EACPmF,WAAYnF,EAAQ,4BAA8B,GAClD1E,GAAG,QACHqB,MAAM,gBACNG,KAAK,QACLsI,aAAa,QACbhD,WAAS,EACT7F,SAAU,SAACC,GACToF,EAASpF,EAAEC,OAAOC,UAGtB,kBAACL,EAAA,EAAD,CACEvD,QAAQ,WACRkL,OAAO,SACP3B,UAAQ,EACR/F,WAAS,EACTQ,KAAK,WACLH,MAAM,WACN5F,KAAK,WACLuE,GAAG,WACH8J,aAAa,mBACb7I,SAAU,SAACC,GACTgI,EAAYhI,EAAEC,OAAOC,UAGzB,kBAAC2I,GAAA,EAAD,CACE/J,GAAG,cACHgK,QAAS,kBAACC,GAAA,EAAD,CAAU7I,MAAM,WAAW3D,MAAM,YAC1C4D,MAAM,gBAER,kBAAC9D,EAAA,EAAD,CACE9B,KAAK,SACL+B,QAAQ,YACRC,MAAM,UACNuC,GAAG,eACH7C,UAAWiM,EAAQJ,QALrB,WASA,6BACE,kBAAC,KAAD,CACE7L,UAAU,gBACV2G,UAAU,OACVtG,QAAQ,YACR/B,KAAK,QACLiC,QArGO,+CAyGX,kBAACqI,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GACX,kBAAC2B,GAAA,EAAD,CAAMC,KAAK,UAAUxK,QAAQ,SAC1B,IADH,qBAKF,kBAACuI,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC4B,GAAA,EAAD,CAAMC,KAAK,YAAYxK,QAAQ,SAC5B,sCAMX,kBAAC0M,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACtC,GAAD,SCjKOuC,G,4JATX,WACI,OACI,6BACI,kBAACC,GAAD,W,GALU7E,IAAMC,W,UCa1B6E,G,4MACJ1F,MAAQ,CACNtI,eAAe,EACf0H,UAAU,EACVjI,UAAW,GACXC,SAAU,GACVH,YAAa,GACbC,MAAO,GACPuL,SAAU,GACVnL,QAAS,GACTC,IAAK,I,EAGPoO,aAAe,SAAC/J,GACd,EAAKuE,SAAL,gBAAiBvE,EAAMW,OAAOK,KAAOhB,EAAMW,OAAOC,QAC9C,EAAKwD,MAAM9I,OAAS,EAAK8I,MAAMyC,UAAY,EAAKzC,MAAM/I,aACxD,EAAKkJ,SAAS,CAAEf,UAAU,K,EAI9BwG,a,uCAAe,WAAOhK,GAAP,iBAAAiC,EAAA,yDACbjC,EAAMe,mBAEF,EAAKqD,MAAM9I,OAAS,EAAK8I,MAAMyC,UAAY,EAAKzC,MAAM/I,aAH7C,iCAILuL,GAAgB,EAAKxC,MAAM9I,MAAO,EAAK8I,MAAMyC,UAJxC,UAMQ,QADfoD,EAAa9P,EAAUgD,OAAO+M,aALvB,wBAOTlP,EAAO,CACLO,UAAW,EAAK6I,MAAM7I,UACtBC,SAAU,EAAK4I,MAAM5I,SACrBH,YAAa,EAAK+I,MAAM/I,YACxBD,IAAK6O,EAAW7O,IAChBE,MAAO,EAAK8I,MAAM9I,MAClBG,SAAUwO,EAAWxO,UAAY,4BACjCC,QAAS,EAAK0I,MAAM1I,QACpBC,IAAK,EAAKyI,MAAMzI,KAfT,SAkBHiC,EAAW5C,GAlBR,OAmBT,EAAKuJ,SAAS,CAAEzI,eAAe,IAC/B,EAAK6F,MAAMwI,QAAQnP,GACnB,EAAK2G,MAAM9F,mBArBF,wBAuBT8D,QAAQC,IAAI,iBAvBH,gCA0BXD,QAAQC,IAAI,+BA1BD,4C,kGA8Bf,WACE,OAAI0E,KAAKF,MAAMtI,cACN,kBAAC,IAAD,CAAUc,GAAG,MAGpB,kBAACoM,EAAA,EAAD,CACErC,UAAU,MACVsC,SAAS,MAET,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,EACXuC,QAAS,EACTrC,QAAQ,SACRD,UAAU,SACVwC,WAAW,UAEf,kBAAC1C,EAAA,EAAD,CAAMI,MAAI,GACV,kBAACtF,EAAA,EAAD,CAAYrD,QAAQ,MAApB,kCAEA,kBAACuI,EAAA,EAAD,CAAMI,MAAI,GACV,8BACE,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTuC,QAAS,EACTtC,UAAU,SACVC,QAAQ,SACRuC,WAAW,UAEX,kBAAC1C,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAM9I,MAClBuF,MAAM,QACNyF,WAAW,EACX9F,WAAW,EACX+F,UAAU,EACV5J,UAAU,eACV6C,GAAG,QACHwB,KAAK,QACL/F,KAAK,OACL+B,QAAQ,WACRyD,SAAU6D,KAAKyF,gBAGnB,kBAACxE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAMyC,SAClBN,UAAU,EACVvJ,QAAQ,WACR6D,MAAM,WACNL,WAAW,EACX7D,UAAU,eACV6C,GAAG,WACHwB,KAAK,WACL/F,KAAK,WACLwF,SAAU6D,KAAKyF,gBAGlB,kBAACxE,EAAA,EAAD,CAAMI,MAAI,GACT,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAM/I,YAClBkL,UAAU,EACV1F,MAAM,WACN7D,QAAQ,WACRwD,WAAW,EACX7D,UAAU,eACV6C,GAAG,cACHwB,KAAK,cACL/F,KAAK,OACLwF,SAAU6D,KAAKyF,gBAGhB,kBAACxE,EAAA,EAAD,CAAMI,MAAI,GACX,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAM7I,UAClBoB,UAAU,eACVkE,MAAM,aACN7D,QAAQ,WACRwC,GAAG,YACHwB,KAAK,YACLR,WAAW,EACXvF,KAAK,OACLwF,SAAU6D,KAAKyF,gBAGlB,kBAACxE,EAAA,EAAD,CAAMI,MAAI,GACT,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAM5I,SAClBmB,UAAU,eACV6C,GAAG,WACHxC,QAAQ,WACRgE,KAAK,WACLH,MAAM,YACNL,WAAW,EACXvF,KAAK,OACLwF,SAAU6D,KAAKyF,gBAGhB,kBAACxE,EAAA,EAAD,CAAMI,MAAI,GACX,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAM1I,QAClBiB,UAAU,eACVK,QAAQ,WACRwC,GAAG,UACHwB,KAAK,UACLR,WAAW,EACXK,MAAM,UACN5F,KAAK,OACLwF,SAAU6D,KAAKyF,gBAGhB,kBAACxE,EAAA,EAAD,CAAMI,MAAI,GACX,kBAACpF,EAAA,EAAD,CACEK,MAAO0D,KAAKF,MAAMzI,IAClBgB,UAAU,eACVK,QAAQ,WACRwC,GAAG,MACHwB,KAAK,MACLR,WAAW,EACXvF,KAAK,OACL4F,MAAM,MACNJ,SAAU6D,KAAKyF,gBAGjB,kBAAChN,EAAA,EAAD,CACEC,QAAQ,YACR/B,KAAK,SACLgC,MAAM,UACNC,QAASoH,KAAK0F,aACdxG,SAAUc,KAAKF,MAAMZ,UALvB,kBAUF,kBAAC4G,GAAA,EAAD,CAAYzN,UAAU,gBACpB,kBAAC,KAAD,CAASK,QAAQ,QAAQqN,UAAU,QACjC,kBAAC,IAAD,CAAMxN,MAAO,CAACC,eAAgB,QAASF,GAAG,UAA1C,gD,GAxLOoI,IAAMC,WAwMvBC,GAAqB,CACzBrJ,mBACAd,aAGaoK,gBATS,SAACf,GAAD,MAAY,CAClCtI,cAAesI,EAAMjH,KAAKrB,iBAQYoJ,GAAzBC,CAA6C2E,IC9M7CQ,GAVM,WACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7D,OAAK,EAACC,KAAK,IAAIC,UAAWiD,KACjC,kBAAC,IAAD,CAAOnD,OAAK,EAACC,KAAK,SAASC,UAAWiD,KACtC,kBAAC,IAAD,CAAOnD,OAAK,EAACC,KAAK,UAAUC,UAAWmD,OCDvCS,G,4JACJ,WACE,OACE,kBAAC,IAAD,KACE,kBAACvB,EAAA,EAAD,CAAWrM,UAAU,iBAClB2H,KAAK3C,MAAM7F,eAAiB,kBAAC,EAAD,MAC5BwI,KAAK3C,MAAM7F,cAAgB,kBAAC,GAAD,MAAoB,kBAAC,GAAD,Y,GANxCkJ,IAAMC,WAiBlBC,GAAqB,CACzBnJ,iBACAE,kBAGakJ,gBATS,SAACf,GAAD,MAAY,CAClCtI,cAAesI,EAAMjH,KAAKrB,iBAQYoJ,GAAzBC,CAA6CoF,IC7BxDC,I,OAAc,CAChB7O,IAAK,gCACLN,YAAa,iBACbC,MAAO,iBACPC,UAAW,SACXC,SAAU,eACVC,SAAU,2BACVN,OAAQ,+BACRO,QAAS,YAoDI+O,mBAAgB,CAC7BtN,KAlDF,WAAgE,IAA3CiH,EAA0C,uDAAlC,CAAEtI,eAAe,GAAS4O,EAAQ,uCAC7D,OAAIA,EAAOzP,OAASX,EAAMC,oBAEfmQ,EAAOzP,OAASX,EAAME,kBADxB,2BAAK4J,GAAZ,IAAmBtI,cAAe4O,EAAOxP,QAAQY,gBAI5CsI,GA6CPpJ,KA1CF,WAA0D,IAArCoJ,EAAoC,sEAAvBoG,IAAeE,EAAQ,uCACvD,OAAIA,EAAOzP,OAASX,EAAMG,SACjB,2BAAK2J,GAAUsG,EAAOxP,SAExBkJ,GAuCPvB,MApCF,WAAuE,IAAjDuB,EAAgD,uDAAxC,CAAElI,SAAU,GAAIE,SAAU,IAAMsO,EAAQ,uCACpE,OAAIA,EAAOzP,OAASX,EAAMI,eAEfgQ,EAAOzP,OAASX,EAAMK,YADxB,2BAAKyJ,GAAUsG,EAAOxP,SAIxBkJ,GA+BPpI,SA5BF,WAaG,IAZDoI,EAYA,uDAZQ,CACNtE,gBAAiB,CACfmB,UAAW,UACXnD,YAAa,WACbkD,KAAM,UACNG,QAAQ,EACRD,QAAS,GACTtF,MAAO,wBAETyF,YAAa,IAEfqJ,EACA,uCACA,OAAIA,EAAOzP,OAASX,EAAMM,eACjB,2BAAKwJ,GAAZ,IAAmBtE,gBAAiB4K,EAAOxP,QAAQyD,UAC1C+L,EAAOzP,OAASX,EAAMO,YACxBuJ,EACEsG,EAAOzP,OAASX,EAAMQ,aACxB,2BAAKsJ,GAAZ,IAAmB/C,YAAaqJ,EAAOxP,QAAQc,WAE1CoI,KCjDHnF,GAAQ0L,YAAYC,GAAUC,OAAOC,8BAAgCD,OAAOC,gCAElFC,IAASC,OACL,kBAAC,IAAD,CAAU/L,MAAOA,IACjB,kBAAC,IAAMgM,WAAP,KACA,kBAAC,GAAD,QAGAC,SAASC,cAAc,Y","file":"static/js/main.0a408507.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport FIREBASE from '../keys'\n\nconst firebaseConfig = FIREBASE\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebased = firebase\nexport const db = firebase.firestore()\n\n","const FIREBASE = {\n    apiKey: \"AIzaSyAHzS-BpuOpzmNVs6fcyGwP5_9C-38tx-g\",\n    authDomain: \"classroomchatter-a7f90.firebaseapp.com\",\n    databaseURL: \"https://classroomchatter-a7f90.firebaseio.com\",\n    projectId: \"classroomchatter-a7f90\",\n    storageBucket: \"classroomchatter-a7f90.appspot.com\",\n    messagingSenderId: \"416988184247\",\n    appId: \"1:416988184247:web:e25ee91765ef93607ed732\",\n    measurementId: \"G-CR305YY5T9\"\n  };\n\nexport default FIREBASE","const types = {\n    USER_AUTHENTICATED : 'USER_AUTHENTICATED',\n    USER_DISCONNECTED : 'USER_DISCONNECTED',\n    GET_USER : 'GET_USER',\n    MESSAGE_ADDED : 'MESSAGE_ADDED',\n    ADD_COMMENT : 'ADD_COMMENT',\n    CHANNEL_CHANGE : 'CHANNEL_CHANGE',\n    CHANNEL_ADD : 'CHANNEL_ADD',\n    CHANNEL_LIST : 'CHANNEL_LIST',\n}\n\nexport default types","import  types from '../../helpers/types';\n\nexport const storeUser = user => {\n    return {\n        type: types.GET_USER,\n        payload: {\n            userId: user.uid,\n            displayName: user.displayName,\n            email: user.email,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            photoURL: 'http://picsum.photos/200',\n            website: user.website,\n            bio: user.bio,\n            docId: user.docId\n        }\n    }\n}\n\nexport const authenticateUser = () => {\n    return {\n        type: types.USER_AUTHENTICATED,\n        payload: {\n            authenticated: true\n        }\n    }\n}\n\nexport const disconnectUser = () => {\n    return {\n        type: types.USER_DISCONNECTED,\n        payload: {\n            authenticated: false\n        }\n    }\n}\n\nexport const updateChannels = channels => {\n    return {\n        type: types.CHANNEL_LIST,\n        payload: {\n            channels\n        }\n    }\n}\n\nexport const channelChange = channel => {\n    return {\n        type: types.CHANNEL_CHANGE,\n        payload: {\n           channel\n        }\n    }\n}\n\nexport const updateMessages = messages => {\n    return {\n        type: types.MESSAGE_ADDED,\n        payload: {\n            messages\n        }\n    }\n}\n\nexport const getMessages = messages => {\n    return {\n        type: types.GET_MESSAGES,\n        payload: {\n            messages\n        }\n    }\n}\n\nexport const addComment = comments => {\n    return{\n        type: types.ADD_COMMENT,\n        payload: {\n            comments\n        }\n    }\n}","import { Button, AppBar, Toolbar } from '@material-ui/core';\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom'\nimport { firebased } from '../services/firebase'\nimport { disconnectUser } from '../Redux/actions'\n\nfunction NavBar() {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        firebased.auth().signOut();\n        dispatch(disconnectUser())\n    }\n    \n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"nav-container\">\n          <NavLink to=\"/edit\" style={{textDecoration: 'none'}}>\n            <Button className=\"nav-link-button\" variant=\"text\">\n              Profile\n            </Button>\n          </NavLink>\n          <NavLink to=\"/\" style={{textDecoration: 'none'}}>\n            <Button\n              className=\"nav-link-button\"\n              variant=\"text\"\n              color=\"default\"\n            >\n              Home\n            </Button>\n          </NavLink>\n          <Button\n            variant=\"text\"\n            color=\"secondary\"\n            className=\"nav-link-button\"\n            onClick={signout}\n          >\n            Log Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n}\n\nexport default NavBar\n","import { db } from \"../services/firebase\";\n\nexport function addUser(user) {\n  return db.collection(\"users\").add({\n    id: user.uid,\n    displayName: user.displayName,\n    photoURL: user.photoURL,\n  });\n}\n\nexport function getUserData(userId) {\n    const userPromise = new Promise((resolve, reject) => {\n        return db.collection(\"users\").where(\"uid\", \"==\", userId).get().then((query) => {\n          query.forEach((user) => {\n            resolve({ ...user.data(), docId: user.id });\n          });\n        },\n          (rej) => {reject(rej)});\n    })\n    return userPromise\n}\n\nexport function updateUser(user, newFields) {\n  db.collection(\"users\")\n    .doc(user.docId)\n    .update({ ...newFields })\n    .then(() => {\n    }, rej => {\n    });\n}\n\nexport function signUpUser(user) {\n  return db.collection(\"users\").add({\n    ...user, dateCreated: new Date()\n  });\n}\nexport function addChannel(channel) {\n  return db.collection(\"channels\").add({\n    name: channel.name,\n    creatorId: channel.uid,\n    dateCreated: new Date(),\n    members: [],\n    public: true,\n  });\n}\n\nexport function getChannels() {\n  const channelsPromise = new Promise((resolve, reject) => {\n    db.collection(\"channels\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return channelsPromise;\n}\n\nexport function getMessages() {\n  const messagesPromise = new Promise((resolve, reject) => {\n    db.collection(\"messages\")\n      .orderBy(\"dateCreated\", \"desc\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return messagesPromise;\n}\nexport function getComments() {\n  const commentsPromise = new Promise((resolve, reject) => {\n    db.collection(\"comments\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return commentsPromise;\n}\nexport function getChannel(channelName) {\n  const channelsPromise = new Promise((resolve, reject) => {\n    db.collection(\"channels\")\n      .where(\"name\", \"==\", channelName)\n      .get()\n      .then((query) => {\n        resolve(query);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n  return channelsPromise;\n}\n\nexport function addMessage(messageObject, channelRef, userRef) {\n  db.collection(\"messages\")\n    .add({\n      body: messageObject,\n      channelId: channelRef.docId,\n      userId: userRef.userId,\n      userImg: userRef.photoURL,\n      displayName: userRef.displayName,\n      dateCreated: new Date(),\n    })\n    .then(() => {\n    })\n    .catch((error) => {\n      console.log(\"failure\", error);\n    });\n}\n\nexport function addMessageComment(commentObject) {\n  db.collection(\"comments\").add({ ...commentObject, dateCreated: new Date() });\n}\n","import {\n  Button,\n  CardHeader,\n  IconButton,\n  Card,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { channelChange, updateChannels } from \"../Redux/actions\";\nimport { getChannels, addChannel } from \"../helpers/db\";\n\nconst ChannelDisplay = () => {\n  const [channel, setChannel] = useState(\"\");\n  const [newChannelButton, setChannelButton] = useState(false);\n  const [ownChannelSelect, setOwnChannelSelect] = useState();\n\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  useEffect(() => {\n    getChannels().then((response) => {\n      const channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      dispatch(updateChannels(channels));\n    });\n  }, []);\n\n  const handleChannelChange = (channel) => {\n    dispatch(channelChange(channel));\n    console.log(store.getState().channels.selectedChannel.docId);\n  };\n\n  const handleAddChannel = (event) => {\n    event.preventDefault();\n    setChannelButton(false);\n    console.log(\"adding channel\");\n    addChannel({ name: channel, uid: store.getState().user.userId }); // TODO: implement proper messaging\n    getChannels().then((response) => {\n      let channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      dispatch(updateChannels(channels));\n    });\n    setChannel(\"\");\n  };\n\n  const handleChannelNameChange = (event) => {\n    console.log(\"changed name of channel to\");\n  };\n  const handleChannelDelete = (event) => {\n    console.log(\"deleted Channel\");\n  };\n  return (\n    <Card className=\"channel-display\">\n      <CardHeader\n        className=\"channel-header\"\n        title={\n          <Typography variant=\"h6\" display=\"inline\">\n            All Channels\n          </Typography>\n        }\n      />\n\n      {newChannelButton && (\n        <form>\n          <TextField\n            variant=\"standard\"\n            type=\"text\"\n            fullWidth=\"true\"\n            onChange={(e) => setChannel(e.target.value)}\n            label=\"Enter channel name...\"\n            value={channel}\n          />\n          <Button\n            color=\"primary\"\n            size=\"medium\"\n            type=\"submit\"\n            onClick={handleAddChannel}\n          >\n            Add Channel\n          </Button>\n          <Button\n            color=\"secondary\"\n            size=\"medium\"\n            type=\"submit\"\n            onClick={() => setChannelButton(false)}\n          >\n            Cancel\n          </Button>\n        </form>\n      )}\n\n      {store.getState().channels.allChannels.map((channel) => {\n        return channel.docId ===\n          store.getState().channels.selectedChannel.docId ? (\n          <Button\n            key={channel.docId}\n            variant=\"contained\"\n            fullWidth={true}\n            color=\"primary\"\n            onClick={() => handleChannelChange(channel)}\n          >\n            {channel.name}\n          </Button>\n        ) : (\n          <Button\n            key={channel.docId}\n            variant=\"text\"\n            fullWidth={true}\n            onClick={() => handleChannelChange(channel)}\n          >\n            {channel.name}\n          </Button>\n        );\n      })}\n      <CardHeader\n        title={\n          <Typography variant=\"h6\" display=\"inline\">\n            Your Channels{\" \"}\n            <IconButton\n              className=\"create-channel-button custom-button\"\n              onClick={() => setChannelButton(!newChannelButton)}\n            >\n              +\n            </IconButton>\n          </Typography>\n        }\n      />\n      {store.getState().channels.allChannels.map((channel) => {\n        let result = [];\n        if (channel.creatorId === store.getState().user.userId) {\n          result = (\n            <Button\n              key={channel.docId}\n              variant=\"text\"\n              fullWidth={true}\n              onClick={() => setOwnChannelSelect(channel.docId)}\n            >\n              {channel.name}\n            </Button>\n          );\n        } else if (\n          channel.creatorId === store.getState().user.userId &&\n          ownChannelSelect === channel.docId\n        ) {\n          result = (\n            <>\n              {\" \"}\n              <Button\n                key={channel.docId}\n                variant=\"contained\"\n                fullWidth={true}\n                onClick={() => setOwnChannelSelect(\"\")}\n              >\n                {channel.name}\n              </Button>\n              <Button\n                variant=\"text\"\n                fullWidth={true}\n                onClick={() => handleChannelNameChange}\n                color=\"primary\"\n              >\n                Change Name\n              </Button>\n              <Button\n                variant=\"text\"\n                fullWidth={true}\n                onClick={() => handleChannelDelete}\n                color=\"secondary\"\n              >\n                Delete\n              </Button>\n            </>\n          );\n        }\n        return result;\n      })}\n    </Card>\n  );\n};\n\nexport default ChannelDisplay;\n","import {\n  Avatar,\n  IconButton,\n  Card,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { addMessageComment, getComments } from \"../helpers/db\";\nimport { addComment } from \"../Redux/actions\";\n\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport SendRounded from \"@material-ui/icons/SendRounded\";\n\nconst MessageCard = (props) => {\n  const [comment, setComment] = useState(\"\");\n  const [like, setLike] = useState(false);\n  const dispatch = useDispatch();\n  const store = useStore();\n  useEffect(() => {\n    getComments().then((response) => {\n      const comments = [];\n      response.forEach((comment) => {\n        comments.push({ ...comment.data(), docId: comment.id });\n      });\n      dispatch(addComment(comments));\n    });\n  });\n\n  const handleComment = async () => {\n    let comments = [];\n    addMessageComment({\n      commentBody: comment,\n      userId: store.getState().user.userId,\n      userImg: store.getState().user.photoURL,\n      displayName: store.getState().user.displayName,\n      messageId: props.docId,\n    });\n    await getComments().then((response) => {\n      response.forEach((commentDoc) => {\n        comments.push({ ...commentDoc.data(), docId: commentDoc.id });\n      });\n    });\n    dispatch(addComment(comments));\n    setComment(\"\");\n  };\n\n  const displayComments = () => {\n    const result = store.getState().posts.comments.map((comment) => {\n      let result;\n      if (comment.messageId === props.docId) {\n        result = (\n          <div key={comment.docId}>\n            <List dense={true}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar variant=\"rounded\" src={comment.userImg} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={comment.displayName}\n                  secondary={comment.commentBody}\n                />\n              </ListItem>\n            </List>\n          </div>\n        );\n      }\n      return result;\n    });\n    return result;\n  };\n\n  return (\n    <Card className=\"message-card\">\n      <CardHeader\n        avatar={<Avatar src={props.userImg} />}\n        title={\n          <Typography variant=\"h6\" className=\"message-title\">\n            {props.username}\n          </Typography>\n        }\n      />\n      <CardContent>\n        <Typography variant=\"body2\" className=\"message-body\">\n          {props.messageBody}\n        </Typography>\n        {displayComments()}\n      </CardContent>\n      <TextField\n        label=\"Post a comment!\"\n        multiline\n        fullwidth=\"true\"\n        rows={1}\n        value={comment}\n        variant=\"outlined\"\n        onChange={(e) => setComment(e.target.value)}\n        className=\"comment-box\"\n      />\n      <IconButton\n        type=\"button\"\n        variant=\"contained\"\n        className=\"post-button\"\n        color=\"primary\"\n        disabled={comment !== \"\" ? false : true}\n        onClick={handleComment}\n      >\n        <SendRounded />\n      </IconButton>\n      <IconButton\n        variant=\"contained\"\n        className=\"like-button\"\n        onClick={(e) => setLike(!like)}\n      >\n        {like ? <Favorite color=\"primary\" /> : <FavoriteBorder />}\n      </IconButton>\n    </Card>\n  );\n};\n\nexport default MessageCard;\n","import React from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useStore } from 'react-redux'\nimport { Avatar, Button, Card, CardContent, CardHeader, TextField, Typography } from \"@material-ui/core\";\nimport { addMessage, getMessages,  } from '../helpers/db'\nimport { updateMessages } from '../Redux/actions'\n\nconst MessageTextArea = (props) => {\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const handleMessageSubmit = (event) => {\n        event.preventDefault()\n        addMessage( message, props.selectedChannel, props.user);\n        getMessages().then(response => {\n            let messages = [];\n            response.forEach(message => {\n                messages.push({ ...message.data(), docId: message.id });\n            })\n            dispatch(updateMessages(messages));\n        });\n        setMessage('');\n    }\n\n    return (\n        <Card className=\"message-card\">\n        <CardHeader\n          avatar={<Avatar src={store.getState().user.photoURL} />}\n          title={\n            <Typography variant=\"h6\" className=\"message-title\">\n              {props.user.displayName}\n            </Typography>\n          }\n        />\n        <CardContent>\n          <Typography variant=\"body1\" className=\"message-body\">\n              Write new posts here!\n          </Typography>\n        </CardContent>\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Create a new post!\"\n            multiline\n            fullwidth=\"true\"\n            rows={2}\n            variant=\"outlined\"\n            className=\"comment-box\"\n            onChange={e => setMessage(e.target.value)} \n            value={message}\n          />\n           <Button\n           id=\"post-button\"\n          type=\"button\"\n          variant=\"contained\"\n          className=\"post-button\"\n          color=\"primary\"\n          disabled={(message !== '' && props.selectedChannel.name !== 'default') ? false: true}\n          onClick={handleMessageSubmit}\n        >\n          Post!\n        </Button>\n      </Card>\n        // <Card elevation={15} className=\"message-input-box\">\n        //     {console.log(props.user)}\n        //     <TextField className=\"comment-box\" color=\"primary\" label=\"Write a post!\" variant=\"standard\" fullwidth=\"true\" rows={2} multiline={true} onChange={e => setMessage(e.target.value)} value={message}/>\n        //     <Button variant=\"contained\" color=\"primary\" disabled={(message !== '' && props.selectedChannel.name !== 'default') ? false: true} onClick={handleMessageSubmit}>Send</Button>\n        // </Card>\n    )\n}\n\nexport default MessageTextArea","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  IconButton,\n  Card,\n  Button,\n  CardHeader,\n  Typography,\n  CardContent,\n  TextField,\n} from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\nimport { storeUser } from \"../Redux/actions\";\n\nimport { updateUser } from \"../helpers/db\";\n\nclass Profile extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    displayName: \"\",\n    email: \"\",\n    website: \"\",\n    bio: \"\",\n    edit: false,\n  };\n\n  setEdit() {\n    console.log(this.edit);\n    this.edit = !this.edit;\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  updateProfile() {\n    let newUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      displayName: this.state.displayName,\n      email: this.state.email,\n      website: this.state.website,\n      bio: this.state.bio,\n    };\n    updateUser(this.props.user, newUser);\n    this.props.storeUser();\n    this.setState({ edit: false });\n  }\n\n  render() {\n    if (this.edit) {\n      return (\n        <Card className=\"profile-area\">\n          <CardHeader className=\"profile-name\">\n            <TextField\n              onChange={(e) => this.handleInput(e)}\n              name=\"firstName\"\n              label=\"First Name\"\n              value={this.props.user.firstName}\n            />\n                    {console.log('ding')}\n            <TextField\n              onChange={(e) => this.handleInput(e)}\n              name=\"lastName\"\n              label=\"Last Name\"\n              value={this.props.user.lastName}\n            />\n            <IconButton onClick={() => this.setEdit()}>\n              <Edit />\n            </IconButton>\n\n            <TextField\n              onChange={(e) => this.handleInput(e)}\n              name=\"displayName\"\n              className=\"profile-name\"\n              label=\"Display Name\"\n              placeholder={this.props.user.displayName}\n            />\n          </CardHeader>\n          <div className=\"profile-image\">\n            <img\n              alt=\"user avatar\"\n              className=\"profile-img\"\n              src={this.props.user.photoURL}\n            />\n          </div>\n          <TextField\n            onChange={(e) => this.handleInput(e)}\n            name=\"email\"\n            label=\"Email\"\n            placeholder={this.props.user.email}\n          />\n          <TextField\n            onChange={(e) => this.handleInput(e)}\n            name=\"website\"\n            label=\"Website\"\n            placeholder={this.props.user.website}\n          />\n          <TextField\n            onChange={(e) => this.handleInput(e)}\n            name=\"bio\"\n            label=\"Bio\"\n            placeholder={this.props.user.bio}\n          />\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => this.updateProfile()}\n          >\n            Update\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => this.setEdit()}\n          >\n            Cancel\n          </Button>\n        </Card>\n      );\n    } else if(this.edit === false || this.edit === undefined) {\n      return (\n        <Card className=\"profile-area\">\n          <CardHeader\n            className=\"profile-name\"\n            title={\n              <Typography variant=\"h5\" className=\"message-title\">\n                {this.props.user.firstName +\n                  \" \" +\n                  this.props.user.lastName +\n                  \"       \"}\n                <IconButton onClick={() => this.setEdit()}>\n                  <Edit />\n                </IconButton>\n              </Typography>\n            }\n            subheader={\n              <Typography className=\"profile-name\">\n                {this.props.user.displayName}\n              </Typography>\n            }\n          ></CardHeader>\n          <div className=\"profile-image\">\n            <img\n              alt=\"user avatar\"\n              className=\"profile-img\"\n              src={this.props.user.photoURL}\n            />\n          </div>\n          {console.log('dong')}\n\n          <CardContent className=\"profile-field-value\">\n            {this.props.user.email}\n          </CardContent>\n          <CardContent className=\"profile-field-value\">\n            {this.props.user.website}\n          </CardContent>\n          <CardContent className=\"profile-field-value\">\n            {this.props.user.bio}\n          </CardContent>\n        </Card>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = {\n  storeUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateChannels, updateMessages } from \"../Redux/actions\";\nimport ChannelDisplay from \"../components/ChannelDisplay\";\nimport MessageCard from \"../components/MessageCard\";\nimport MessageTextArea from \"../components/MessageTextArea\";\nimport { getMessages } from \"../helpers/db\";\nimport Profile from \"./Profile\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    getMessages().then((response) => {\n      let messages = [];\n      response.forEach((message) => {\n        messages.push({ ...message.data(), docId: message.id });\n      });\n      this.props.updateMessages(messages);\n    });\n  }\n\n  displayChannelMessages = () => {\n    const { selectedChannel, posts } = this.props;\n    const { messages } = posts;\n    const result = messages.map((message, index) => {\n      let result;\n      if (message.channelId === selectedChannel.docId)\n        result = (\n          <MessageCard\n            channelId={selectedChannel.docId}\n            key={index}\n            messageBody={message.body}\n            userImg={message.userImg}\n            username={message.displayName}\n            docId={message.docId}\n          />\n        );\n\n      return result;\n    });\n    return result;\n  };\n\n  render() {\n    return (\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid item xs={3}>\n          <ChannelDisplay />\n        </Grid>\n        <Grid item xs={6}>\n          <MessageTextArea\n            user={this.props.user}\n            selectedChannel={this.props.selectedChannel}\n          />\n          {this.displayChannelMessages()}\n        </Grid>\n        <Grid item xs={3}>\n          <Profile />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selectedChannel: state.channels.selectedChannel,\n  posts: state.posts,\n  user: state.user,\n});\n\nconst mapDispatchToProps = {\n  updateChannels,\n  updateMessages,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport {  updateUser } from \"../helpers/db\";\n// import { getCurrentUser } from '../helpers/auth'\nimport { Redirect } from \"react-router-dom\";\nconst Edit = () => {\n    \n  const dispatch = useDispatch();\n  const store = useStore();\n  const [email, setEmail] = useState(store.getState().user.email);\n  const [displayName, setDisplayName] = useState(\n    store.getState().user.displayName\n  );\n  const [firstName, setFirstName] = useState(store.getState().user.firstName);\n  const [lastName, setLastName] = useState(store.getState().user.lastName);\n  const [website, setWebsite] = useState(store.getState().user.website);\n  const [bio, setBio] = useState(store.getState().user.bio);\n  const [updated, setUpdated] = useState(false);\n\n  // async function getUserInfo() {\n  //   let userResponse = await getCurrentUser();\n  //   return userResponse\n  // }\n\n  useEffect(() => {\n    //getUserInfo();\n  }, []);\n\n  const handleEditUser = () => {\n    let user = {\n      firstName,\n      lastName,\n      displayName,\n      email,\n      website,\n      bio,\n    };\n    updateUser(store.getState().user, user);\n    dispatch()\n    setUpdated(true);\n  };\n\n  return (\n    <Grid container>\n      {store.getState().auth.authenticated === false || updated ? (\n        <Redirect to=\"/\" />\n      ) : null}\n      <Grid item xs={8} className=\"signup-form-container\">\n        <form>\n            <TextField\n              value={email}\n              label=\"Email\"\n              autoFocus={true}\n              required={true}\n              className=\"signup-input\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              value={displayName}\n              required={true}\n              label=\"Username\"\n              className=\"signup-input\"\n              id=\"displayName\"\n              name=\"displayName\"\n              type=\"text\"\n              onChange={(e) => setDisplayName(e.target.value)}\n            />         \n            <TextField\n              value={firstName}\n              className=\"signup-input\"\n              label=\"First Name\"\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              value={lastName}\n              className=\"signup-input\"\n              id=\"lastName\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              type=\"text\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <TextField\n              value={website}\n              className=\"signup-input\"\n              id=\"website\"\n              name=\"website\"\n              label=\"Website\"\n              type=\"text\"\n              onChange={(e) => setWebsite(e.target.value)}\n            />\n            <TextField\n              value={bio}\n              className=\"signup-input\"\n              id=\"bio\"\n              name=\"bio\"\n              type=\"text\"\n              label=\"Bio\"\n              onChange={(e) => setBio(e.target.value)}\n            />\n          <div className=\"signup-button\">\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              color=\"primary\"\n              onClick={handleEditUser}\n            >\n              Update Profile\n            </Button>\n          </div>\n        </form>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Edit;\n","import React from 'react'\nimport {\n    Route,\n    Switch,\n  } from \"react-router-dom\";\n\nimport Home from \"../pages/Home\";\nimport Edit from './Edit'\n\nconst PrivateSwitch = () => {\n    return (\n        <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/edit\" component={Edit} />\n              <Route component={Home} />\n        </Switch>\n    )\n}\n\nexport default PrivateSwitch\n","import { firebased } from '../services/firebase'\n\nexport function signUpWithEmail(email, password) {\n    return firebased.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n        console.log('Sign up with email failed' ,error)\n    })\n}\n\nexport function loginWithEmail(email, password){\n    return firebased.auth().signInWithEmailAndPassword(email, password).catch(error => {console.log(error)})\n}\n\nexport function signInWithGoogle() {\n    let provider = new firebased.auth.GoogleAuthProvider()\n    return firebased.auth().signInWithPopup(provider)\n}\n\nexport function logOut() {\n    return firebased.auth().signOut()\n}\n\nexport function getCurrentUser() {\n    return firebased.auth().currentUser;\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GoogleButton from \"react-google-button\";\n\nimport { loginWithEmail, signInWithGoogle } from \"../helpers/auth\";\nimport { authenticateUser, storeUser } from \"../Redux/actions\";\nimport { getUserData } from \"../helpers/db\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Travis Heffelfinger\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction LoginPage() {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [error, setError] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  async function handleEmailSignIn(event) {\n    event.preventDefault();\n    let userResponse = await loginWithEmail(email, password);\n    processUserData(userResponse)\n  }\n\n  function processUserData(userData) {\n    try {\n      getUserData(userData.user.uid).then(\n        (resolve) => {\n          console.log(`This is the resolve please help me understand ${resolve}`)\n          dispatch(storeUser(resolve)); // load Redux with User information\n          dispatch(authenticateUser()); // set Redux Authenicated flag to true\n        },\n        (reject) => {\n          console.log(reject);\n        }\n      );\n    } catch (error) {\n      console.log(\"this error came from catch \" + error);\n      setError(\"Invalid email or password\");\n    }\n  }\n\n  async function loginWithGoogle(event) {\n    event.preventDefault();\n    let userResponse = await signInWithGoogle();\n    processUserData(userResponse)\n    \n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleEmailSignIn}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={error}\n            helperText={error ? \"Invalid email or password\" : \"\"}\n            id=\"email\"\n            label=\"Email address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <FormControlLabel\n            id=\"remember-me\"\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            id=\"login-button\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <div>\n            <GoogleButton\n              className=\"google-button\"\n              fullwidth=\"true\"\n              variant=\"contained\"\n              type=\"light\"\n              onClick={loginWithGoogle}\n            />\n          </div>\n\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/#/home\" variant=\"body2\">\n                {\" \"}\n                Forgot Password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/#/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react'\n\nimport Login from '../components/Login'\n\nclass LandingPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Login />\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React from \"react\";\nimport { signUpUser } from \"../helpers/db\";\nimport { signUpWithEmail } from \"../helpers/auth\";\nimport { firebased } from \"../services/firebase\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { authenticateUser, storeUser } from \"../Redux/actions\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  InputLabel,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  Link as MUILink,\n} from \"@material-ui/core\";\n\nclass Register extends React.Component {\n  state = {\n    authenticated: false,\n    disabled: true,\n    firstName: \"\",\n    lastName: \"\",\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    website: \"\",\n    bio: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    if (this.state.email && this.state.password && this.state.displayName) {\n      this.setState({ disabled: false });\n    }\n  };\n\n  handleSignUp = async (event) => {\n    event.preventDefault();\n    let user;\n    if (this.state.email && this.state.password && this.state.displayName) {\n      await signUpWithEmail(this.state.email, this.state.password);\n      let authedUser = firebased.auth().currentUser;\n      if (authedUser !== null) {\n        user = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          displayName: this.state.displayName,\n          uid: authedUser.uid,\n          email: this.state.email,\n          photoURL: authedUser.photoURL || \"https://picsum.photos/200\",\n          website: this.state.website,\n          bio: this.state.bio,\n        };\n\n        await signUpUser(user);\n        this.setState({ authenticated: true });\n        this.props.getUser(user);\n        this.props.authenticateUser();\n      } else {\n        console.log(\"signup failed\");\n      }\n    } else {\n      console.log(\"non valid email or password\");\n    }\n  };\n\n  render() {\n    if (this.state.authenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Container\n        component=\"div\"\n        maxWidth=\"md\" \n      >\n        <Grid container\n            spacing={2}\n            justify=\"center\"\n            direction=\"column\"\n            alignItems=\"center\">\n          \n        <Grid item>\n        <Typography variant=\"h4\">Welcome to Classroom Chatter!</Typography>\n        </Grid>\n        <Grid item>\n        <form>\n          <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <TextField\n                value={this.state.email}\n                label=\"Email\"\n                autoFocus={true}\n                fullWidth={true}\n                required={true}\n                className=\"signup-input\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                variant=\"outlined\"\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                value={this.state.password}\n                required={true}\n                variant=\"outlined\"\n                label=\"Password\"\n                fullWidth={true}\n                className=\"signup-input\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={this.handleChange}\n              />\n             </Grid>\n             <Grid item>\n              <TextField\n                value={this.state.displayName}\n                required={true}\n                label=\"Username\"\n                variant=\"outlined\"\n                fullWidth={true}\n                className=\"signup-input\"\n                id=\"displayName\"\n                name=\"displayName\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n               </Grid>\n               <Grid item>\n              <TextField\n                value={this.state.firstName}\n                className=\"signup-input\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                id=\"firstName\"\n                name=\"firstName\"\n                fullWidth={true}\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n             </Grid>\n             <Grid item>\n              <TextField\n                value={this.state.lastName}\n                className=\"signup-input\"\n                id=\"lastName\"\n                variant=\"outlined\"\n                name=\"lastName\"\n                label=\"Last Name\"\n                fullWidth={true}\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n               </Grid>\n               <Grid item>\n              <TextField\n                value={this.state.website}\n                className=\"signup-input\"\n                variant=\"outlined\"\n                id=\"website\"\n                name=\"website\"\n                fullWidth={true}\n                label=\"Website\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n               </Grid>\n               <Grid item>\n              <TextField\n                value={this.state.bio}\n                className=\"signup-input\"\n                variant=\"outlined\"\n                id=\"bio\"\n                name=\"bio\"\n                fullWidth={true}\n                type=\"text\"\n                label=\"Bio\"\n                onChange={this.handleChange}\n              />\n                 </Grid>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                onClick={this.handleSignUp}\n                disabled={this.state.disabled}\n              >\n                Create Account\n              </Button>\n            \n            <InputLabel className=\"signup-label\">\n              <MUILink variant=\"body2\" underline=\"none\">\n                <Link style={{textDecoration: 'none'}} to=\"/login\"> Already have an account? sign in</Link>\n              </MUILink>\n            </InputLabel>\n          </Grid>\n        </form>\n        </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = {\n  authenticateUser,\n  storeUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport LandingPage from \"../pages/LandingPage\";\nimport Register from \"../pages/Register\";\n\nconst PublicSwitch = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route exact path=\"/login\" component={LandingPage} />\n      <Route exact path=\"/signup\" component={Register} />\n    </Switch>\n  );\n};\n\nexport default PublicSwitch;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport NavBar from \"./NavBar\";\nimport { updateChannels, updateMessages } from \"../Redux/actions\";\nimport { Container } from \"@material-ui/core\";\nimport PrivateSwitch from \"./PrivateSwitch\";\nimport PublicSwitch from \"./PublicSwitch\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Container className=\"app-container\">\n          {this.props.authenticated && <NavBar />}\n          {this.props.authenticated ? <PrivateSwitch /> : <PublicSwitch />}\n        </Container>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = {\n  updateChannels,\n  updateMessages,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport types from \"../../helpers/types\";\n\nlet defaultUser = {                             // Default user for testing purposes\n  bio: \"I am the first test of Signup\",\n  displayName: \"ExampleProject\",\n  email: \"test@email.com\",\n  firstName: \"Travis\",\n  lastName: \"Heffelfinger\",\n  photoURL: \"http://picsum.photos/200\",\n  userId: \"dwCGwI2rwBc42CIQHS8jIJ5ZQR12\",\n  website: \"website\",\n};\n\nfunction authReducer(state = { authenticated: false }, action) { \n  if (action.type === types.USER_AUTHENTICATED) {\n    return { ...state, authenticated: action.payload.authenticated };\n  } else if (action.type === types.USER_DISCONNECTED) {\n    return { ...state, authenticated: action.payload.authenticated };\n  }\n  return state;\n}\n\nfunction userReducer(state = { ...defaultUser }, action) {\n  if (action.type === types.GET_USER) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n}\n\nfunction postsReducer(state = { messages: [], comments: [] }, action) {\n  if (action.type === types.MESSAGE_ADDED) {\n    return { ...state, ...action.payload };\n  } else if (action.type === types.ADD_COMMENT) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n}\n\nfunction channelReducer(\n  state = {\n    selectedChannel: {\n      creatorId: \"default\",\n      dateCreated: \"00:00:00\",\n      name: \"default\",\n      public: true,\n      members: [],\n      docId: \"6I5S8EZ6wdMEk4DRHY5b\",\n    },\n    allChannels: [],\n  },\n  action\n) {\n  if (action.type === types.CHANNEL_CHANGE) {\n    return { ...state, selectedChannel: action.payload.channel };\n  } else if (action.type === types.CHANNEL_ADD) {\n    return state;\n  } else if (action.type === types.CHANNEL_LIST) {\n    return { ...state, allChannels: action.payload.channels };\n  }\n  return state;\n}\n\nexport default combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  posts: postsReducer,\n  channels: channelReducer,\n});\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { createStore } from 'redux'\n\nimport App from './components/App'\nimport './styles/index.css'\n\nimport reducers from './Redux/reducers'\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode> \n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}