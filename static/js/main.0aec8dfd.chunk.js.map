{"version":3,"sources":["helpers/types.js","actions/index.js","services/firebase.js","keys.js","helpers/db.js","components/ChannelDisplay.js","components/MessageCard.js","components/MessageTextArea.js","pages/Profile.js","pages/Home.js","helpers/auth.js","styles/testlogin.js","pages/LandingPage.js","pages/SignUpPage.js","components/NavBar.js","components/App.js","reducers/index.js","index.js"],"names":["types","USER_AUTHENTICATED","USER_DISCONNECTED","GET_USER","MESSAGE_ADDED","ADD_COMMENT","CHANNEL_CHANGE","CHANNEL_ADD","CHANNEL_LIST","authenticateUser","type","payload","authenticated","updateChannels","channels","updateMessages","messages","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebased","db","firestore","signUpUser","user","collection","add","getChannels","Promise","resolve","reject","get","then","query","getMessages","orderBy","ChannelDisplay","useState","setChannels","dispatch","useDispatch","store","useStore","useEffect","response","forEach","channel","push","data","docId","id","handleChannelChange","channelChange","console","log","getState","selectedChannel","className","map","key","onClick","name","MessageCard","props","username","dateCreated","messageBody","placeholder","value","mapDispatchToProps","connect","state","message","setMessage","setChannel","onChange","e","target","event","preventDefault","creatorId","uid","Date","members","public","addChannel","messageObject","channelRef","userRef","body","channelId","userId","displayName","catch","error","Profile","React","Component","Home","displayChannelMessages","posts","index","Paper","this","signUpWithEmail","email","password","auth","createUserWithEmailAndPassword","loginWithEmail","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","Copyright","Typography","variant","color","align","Link","href","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","authenticate","setEmail","setPassword","classes","a","userResponse","Container","component","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","TextField","required","fullWidth","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","fullwidth","Grid","container","item","xs","Box","mt","LandingPage","SignUpPage","handleChange","setState","handleSignUp","authedUser","currentUser","firstName","lastName","photoURL","website","bio","to","htmlFor","NavBar","signOut","App","exact","path","defaultUser","combineReducers","action","comments","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.0aec8dfd.chunk.js","sourcesContent":["const types = {\n    USER_AUTHENTICATED : 'USER_AUTHENTICATED',\n    USER_DISCONNECTED : 'USER_DISCONNECTED',\n    GET_USER : 'GET_USER',\n    MESSAGE_ADDED : 'MESSAGE_ADDED',\n    ADD_COMMENT : 'ADD_COMMENT',\n    CHANNEL_CHANGE : 'CHANNEL_CHANGE',\n    CHANNEL_ADD : 'CHANNEL_ADD',\n    CHANNEL_LIST : 'CHANNEL_LIST',\n}\n\nexport default types","import  types from '../helpers/types';\n\nexport const getUser = user => {\n    return {\n        type: types.GET_USER,\n        payload: {\n            userId: user.uid,\n            displayName: user.displayName,\n            email: user.email,\n            photoURL: user.photoURL,\n            website: user.website,\n            bio: user.bio\n        }\n    }\n}\n\nexport const authenticateUser = () => {\n    return {\n        type: types.USER_AUTHENTICATED,\n        payload: {\n            authenticated: true\n        }\n    }\n}\n\nexport const disconnectUser = () => {\n    return {\n        type: types.USER_DISCONNECTED,\n        payload: {\n            authenticated: false\n        }\n    }\n}\n\nexport const updateChannels = channels => {\n    return {\n        type: types.CHANNEL_LIST,\n        payload: {\n            channels\n        }\n    }\n}\n\nexport const channelChange = channel => {\n    return {\n        type: types.CHANNEL_CHANGE,\n        payload: {\n           channel\n        }\n    }\n}\n\nexport const updateMessages = messages => {\n    return {\n        type: types.MESSAGE_ADDED,\n        payload: {\n            messages\n        }\n    }\n}\n\nexport const getMessages = messages => {\n    return {\n        type: types.GET_MESSAGES,\n        payload: {\n            ...messages\n        }\n    }\n}\n\nexport const updateComments = comments => {\n    return {\n        type: types.MESSAGE_ADDED,\n        payload: {\n            comments\n        }\n    }\n}","import firebase from 'firebase'\nimport FIREBASE from '../keys'\n\nconst firebaseConfig = FIREBASE\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebased = firebase\nexport const db = firebase.firestore()\n\n","const FIREBASE = {\n    apiKey: \"AIzaSyAHzS-BpuOpzmNVs6fcyGwP5_9C-38tx-g\",\n    authDomain: \"classroomchatter-a7f90.firebaseapp.com\",\n    databaseURL: \"https://classroomchatter-a7f90.firebaseio.com\",\n    projectId: \"classroomchatter-a7f90\",\n    storageBucket: \"classroomchatter-a7f90.appspot.com\",\n    messagingSenderId: \"416988184247\",\n    appId: \"1:416988184247:web:e25ee91765ef93607ed732\",\n    measurementId: \"G-CR305YY5T9\"\n  };\n\nexport default FIREBASE","import { db } from '../services/firebase'\nimport firebase from 'firebase'\n\nexport function addMessageOld(message) { // TODO: review this function when Redux is implemented\n    return db.collection('messages').add({\n        text: message.text,\n        userId: message.userId,\n        messageReplies: message.replies,\n        dateCreated: new Date()\n    })\n}\n\nexport function addUser(user) {\n    return db.collection('users').add({\n        id: user.uid,\n        displayName: user.displayName,\n        photoURL: user.photoURL\n    })\n}\n\nexport function updateUser(user, newFields) {\n    db.collection('users')\n    .doc(user.docId)\n    .update({ ...newFields })\n    .then(res => {\n        console.log('user updated!')\n    });\n}\n\nexport function signUpUser(user) {\n    return db.collection('users').add(\n        {\n            ...user\n        }\n    )\n}\nexport function addChannel(channel) {\n    return db.collection('channels').add({\n        name: channel.name,\n        creatorId: channel.uid,\n        dateCreated: new Date(),\n        members: [],\n        public: true\n    })\n}\n\nexport function getChannels() {\n    const channelsPromise = new Promise((resolve, reject) => {\n        db.collection('channels').get().then(query => resolve(query))\n    })\n    return channelsPromise\n}\n\nexport function getMessages() {\n    const messagesPromise = new Promise((resolve, reject) => {\n        db.collection('messages').orderBy('dateCreated', 'desc').get().then(query => resolve(query))\n    })\n    return messagesPromise\n}\n\nexport  function getChannel(channelName) {\n    const channelsPromise = new Promise((resolve, reject) => {\n    db.collection('channels')\n        .where(\"name\", \"==\", channelName)\n        .get()\n        .then(query => {\n            resolve(query)\n        })\n        .catch(error => {\n            reject(error);\n        })\n    })\n    return channelsPromise\n}\n\nexport function addMessage(messageObject, channelRef, userRef) {\n    db.collection('messages')\n    .add({\n        body: messageObject,\n        channelId: channelRef.docId,\n        userId: userRef.uid,\n        displayName: userRef.displayName,\n        dateCreated: new Date()\n    })\n    .then(() => {\n        console.log('new message created');\n    })\n    .catch(error => {\n        console.log('failure', error);\n    })\n}\nexport function updateChannelComments(comment, channelRef) {\n    db.collection('channels')\n    .doc(channelRef.id)\n    .update({comments: firebase.firestore.FieldValue.arrayUnion(comment)})\n    \n    .then(() => {\n        console.log('new comment added');\n    })\n    .catch(error => {\n        console.log('failure', error);\n    })\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useStore } from 'react-redux'\nimport { channelChange } from \"../actions\";\nimport { getChannels } from \"../helpers/db\";\nimport types from '../helpers/types'\n\nconst ChannelDisplay = () => {\n  const [channels, setChannels] = useState([]);\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  useEffect(() => {\n    getChannels().then((response) => {\n      const channels = [];\n      response.forEach((channel) => {\n        channels.push({...channel.data(), docId: channel.id});\n      });\n      setChannels(channels);\n    });\n  }, []);\n\n  const handleChannelChange = (channel) => {\n    dispatch(channelChange(channel))\n    console.log(store.getState().channels.selectedChannel.docId);\n  }\n\n  return (\n    <div className=\"channel-display\">\n    <div className=\"channel-header\">\n      <span>Create a channel</span>\n      <span className=\"create-channel-button custom-button\">+</span>\n    </div>\n      {channels.map((channel) => (\n        <div key={channel.docId} className={(channel.docId !== store.getState().channels.selectedChannel.docId) ? \"channel-select-button-active custom-button\": \"channel-select-button custom-button\"} onClick={() => handleChannelChange(channel)}>{channel.name}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChannelDisplay;\n","import React from 'react'\n\nconst MessageCard = (props) => {\n    return (\n        <div className=\"message-card\">\n            <h3 className=\"message-title\">{props.username}</h3>\n            <h5 className=\"message-timestamp\">{props.dateCreated}</h5>\n            <div className=\"message-body\">\n            { props.messageBody || \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"}\n            </div>\n            <input type=\"textarea\" placeholder=\"Post a comment!\" className=\"comment-box\"/>\n            <input type=\"button\" value=\"Post\" className=\"post-button\"/>\n            <input type=\"button\" value=\"Like\" className=\"like-button\"/>\n        </div>\n    )\n}\n\nexport default MessageCard","import React from 'react'\nimport { useState } from 'react'\nimport { connect, useDispatch } from 'react-redux'\n\nimport { addChannel, addMessage, getMessages, getChannels } from '../helpers/db'\nimport {updateChannels, updateMessages } from '../actions'\n\nconst MessageTextArea =(props) => {\n    const [message, setMessage] = useState('')\n    const [channel, setChannel] = useState('')\n    const dispatch = useDispatch();\n   // const [user, setUser] = useState('dwCGwI2rwBc42CIQHS8jIJ5ZQR12') // TODO: remove test data\n\n    const handleMessageSubmit = (event) => {\n        event.preventDefault()\n        addMessage( message, props.selectedChannel, props.user);\n        getMessages().then(response => {\n            let messages = [];\n            response.forEach(message => {\n                messages.push({ ...message.data(), docId: message.id });\n            })\n            dispatch(updateMessages(messages));\n        });\n        setMessage('');\n    }\n    const handleAddChannel = (event) => {\n        event.preventDefault()\n        addChannel({ name: channel, uid: 'dwCGwI2rwBc42CIQHS8jIJ5ZQR12' }) // TODO: implement proper messaging\n        getChannels().then(response => {\n            let channels = [];\n            response.forEach(channel => {\n                channels.push({ ...channel.data(), docId: channel.id})\n            })\n            dispatch(updateChannels(channels));\n        })\n        setChannel('')\n    }\n\n    return (\n        <div className=\"message-input-box\">\n            <div>\n                \n            </div>\n            <form>\n                <input type=\"text\" onChange={e => setChannel(e.target.value)}/>\n                <button type='submit' onClick={handleAddChannel}>Test Add Channel</button>\n            </form>\n            \n            <form>\n                <input type='textarea' onChange={e => setMessage(e.target.value)} value={message}/>\n                <button type='submit' onClick={handleMessageSubmit}>Send</button>\n            </form>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedChannel: state.channels.selectedChannel,\n    user: state.user,\n})\n\nconst mapDispatchToProps = {\n    updateMessages\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageTextArea)","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Profile extends React.Component {\n\n    componentDidUpdate() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"Profile-area\">\n                <div className=\"profile-name\">Person's Name!!</div>\n                <div className=\"profile-name\">@Username</div>\n                <div className=\"profile-image\"></div>\n                <div className=\"profile-field-name\"> Email</div>\n                <div className=\"profile-field-value\">email@test.com</div>\n                \n                <div className=\"profile-field-name\" >Website</div>\n                <div className=\"profile-field-value\" >www.mytest.com</div>\n                <div className=\"profile-field-name\"> Bio</div>\n                <div className=\"profile-field-value\" > \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import { Paper } from '@material-ui/core'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { updateChannels, updateMessages } from '../actions'\nimport ChannelDisplay from '../components/ChannelDisplay'\nimport MessageCard from '../components/MessageCard'\nimport MessageTextArea from '../components/MessageTextArea'\nimport { getMessages } from '../helpers/db'\nimport Profile from './Profile'\n\nclass Home extends React.Component {\n\n    state = {};\n\n    componentDidMount() {\n        getMessages().then(response => {\n            let messages = [];\n            response.forEach(message => {\n                messages.push({ ...message.data(), docId: message.id });\n            })\n            this.props.updateMessages(messages);\n        });\n    }\n\n    displayChannelMessages = () => {\n        const { selectedChannel, posts, user } = this.props;\n        const { messages } = posts;\n        const result = messages.map((message, index) => {\n            if(message.channelId === selectedChannel.docId)\n            return <MessageCard channelId={selectedChannel.docId} key={index} messageBody={message.body} username={user.displayName}  docId={message.docId} />\n        }) \n        return result;\n    }\n    // TODO: make sure that line 52 works\n    render() {\n        return (\n            <Paper>\n            <div className=\"home-container\">\n                <div className=\"channel-container\">\n                    <ChannelDisplay />\n                </div>\n                <div className=\"message-container\">\n                    \n                    {this.displayChannelMessages()} \n                \n                    <MessageTextArea />\n                </div>\n                <div className=\"profile-container\">\n                    <Profile />\n                </div>\n            </div>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedChannel: state.channels.selectedChannel,\n    posts: state.posts,\n    user: state.user\n})\n\nconst mapDispatchToProps = {\n    updateChannels,\n    updateMessages\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import { firebased } from '../services/firebase'\n\nexport function signUpWithEmail(email, password) {\n    return firebased.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n        console.log('Sign up with email failed' ,error)\n    })\n}\n\nexport function loginWithEmail(email, password){\n    return firebased.auth().signInWithEmailAndPassword(email, password).catch(error => {console.log(error)})\n}\n\nexport function signInWithGoogle() {\n    let provider = new firebased.auth.GoogleAuthProvider()\n    return firebased.auth().signInWithPopup(provider)\n}\n\nexport function logOut() {\n    return firebased.auth().signOut()\n}","import React from 'react';\nimport { useState } from 'react'\nimport { connect, useDispatch, useStore } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport GoogleButton from 'react-google-button'\n\nimport { loginWithEmail, signInWithGoogle} from '../helpers/auth'\nimport { authenticateUser } from '../actions';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction LoginPage(props) {\n\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const classes = useStyles();\n\n    async function handleEmailSignIn(event){\n        event.preventDefault()\n        let userResponse = await loginWithEmail(email,password)\n        console.log(userResponse)\n        dispatch(authenticateUser());\n        console.log(store.getState(), 'props => ', props);\n    }\n\n    async function loginWithGoogle(event) {\n        event.preventDefault()\n        let userResponse = await signInWithGoogle()\n        console.log(userResponse)\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={handleEmailSignIn}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={e => {setEmail(e.target.value)\n                             console.log(e.target.value)}}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => {setPassword(e.target.value)}}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                      <GoogleButton\n                        fullwidth='true'\n                        variant=\"contained\"\n                         type='light'\n                          onClick={loginWithGoogle}\n                          />\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"/home\" variant=\"body2\"> Forgot Password?\n                        </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.auth.authenticated\n})\n\nconst mapDispatchToProps = {\n    authenticate: authenticateUser()\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React from 'react'\n\nimport Login from '../styles/testlogin'\n\nclass LandingPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Login />\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React from 'react'\nimport { signUpUser } from '../helpers/db'\nimport {signUpWithEmail} from '../helpers/auth'\nimport { firebased } from '../services/firebase'\nimport { Redirect } from 'react-router-dom'\n\nclass SignUpPage extends React.Component {\n\n    state = {\n        authenticated: false\n    }\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleSignUp = async (event) => {\n        let user;\n        console.log('ding');\n       event.preventDefault();       \n        await signUpWithEmail(this.state.email, this.state.password)\n        let authedUser = firebased.auth().currentUser;\n        console.log('firebase.auth().currentUser ', authedUser) \n        if (authedUser) {\n            user = {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                displayName: this.state.displayName,\n                uid: authedUser.uid,\n                email: this.state.email,\n                photoURL: authedUser.photoURL,\n                website: this.state.website,\n                bio: this.state.bio\n            }\n            await signUpUser(user)\n            this.setState({authenticated: true})\n        } else {\n          console.log('signup failed')\n        }\n        let userResponse = await signUpUser(user)\n        console.log(userResponse)\n    }\n       \n    render() {\n        if(this.state.authenticated) {\n            return <Redirect to=\"/\"/>\n        }\n        return (\n            <div className=\"signup-container\">\n                <div className=\"signup-form-container\">\n                    <form>\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input id=\"firstName\" name=\"firstName\" type=\"text\" onChange={this.handleChange}/>\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input id=\"lastName\" name=\"lastName\" type=\"text\" onChange={this.handleChange}/>\n                        <label htmlFor=\"displayName\">Username</label>\n                        <input id=\"displayName\" name=\"displayName\" type=\"text\" onChange={this.handleChange}/>\n                        <label htmlFor=\"email\">Email</label>\n                        <input id=\"email\" name=\"email\" type=\"text\" onChange={this.handleChange}/>\n                        <label htmlFor=\"password\">Password</label>\n                        <input id=\"password\" name=\"password\" type=\"text\" onChange={this.handleChange}/>\n                        <label htmlFor=\"website\">Website</label>\n                        <input id=\"website\" name=\"website\" type=\"text\" onChange={this.handleChange}/>\n                        <label htmlFor=\"bio\">Bio</label>\n                        <input id=\"bio\" name=\"bio\" type=\"text\" onChange={this.handleChange}/>\n                        <button onClick={this.handleSignUp}>Create Account</button>\n                        <label>Already have an account?</label> <a href=\"/login\">sign in</a>\n                    </form>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default SignUpPage","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom'\nimport { firebased } from '../services/firebase'\n\nfunction NavBar() {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        firebased.auth().signOut();\n        dispatch({type: 'USER_DISCONNECTED', payload: { authenticated: false}})\n    }\n    \n    return (\n        <div className=\"nav-container\">\n            <NavLink className=\"nav-link\" to=\"/createChannel\">Create Channel</NavLink>\n            <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\n            <button className=\"nav-link\" onClick={signout}>Log Out</button>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Home from '../pages/Home'\nimport LandingPage from '../pages/LandingPage'\nimport SignUpPage from '../pages/SignUpPage'\nimport NavBar from '../components/NavBar'\nimport { updateChannels, updateMessages } from '../actions'\n\nclass App extends React.Component {\n        \n    render() {\n        return (\n            <Router>\n                <div className=\"app-container\">\n                <NavBar />\n                    \n                        {this.props.authenticated ? \n                            <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/login\" component={Home} />\n                            <Route path=\"/signup\" component={Home} />\n                            <Route component={Home} />\n                            </Switch>\n                            :\n                            <Switch>\n                            <Route exact path=\"/\" component={LandingPage} />\n                            <Route exact path=\"/login\" component={LandingPage} /> // TODO: change this to login page\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            </Switch>\n                        }\n                    \n                </div>\n            </Router>\n        )\n    }  \n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.auth.authenticated,\n})\n\nconst mapDispatchToProps = {\n    updateChannels,\n    updateMessages\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { combineReducers } from 'redux';\nimport types from '../helpers/types';\n\nlet defaultUser = {\n    bio: \"I am the first test of Signup\",\n    displayName: \"ExampleProject\",\n    email: \"test@email.com\",\n    firstName: \"Travis\",\n    lastName: \"Heffelfinger\",\n    photoURL: null,\n    uid: \"dwCGwI2rwBc42CIQHS8jIJ5ZQR12\",\n    website: \"website.com\"\n}\n\nfunction authReducer(state = {authenticated: true}, action) { // TODO: change back to false\n    if(action.type === types.USER_AUTHENTICATED) {\n        return { ...state, authenticated: action.payload.authenticated }\n    } else if (action.type === types.USER_DISCONNECTED) {\n        return { ...state, authenticated: action.payload.authenticated }\n    }\n    return state\n}\n\nfunction userReducer( state = {...defaultUser}, action) {\n    if (action.type === types.GET_USER) {\n        return { ...state, user: action.payload.user }\n    }\n    return state\n}\n\nfunction postsReducer(state={messages: []}, action) {\n    if(action.type === types.MESSAGE_ADDED) { \n        return { ...state, ...action.payload };\n    } else if(action.type === types.ADD_COMMENT) {\n        return {...state , comments: action.payload};\n    }\n    return state\n}\n\nfunction channelReducer(state={selectedChannel: {creatorId: 'default', dateCreated: '00:00:00', name: 'default', public: true, members: [], docId: '6I5S8EZ6wdMEk4DRHY5b' }}, action) {\n    if(action.type === types.CHANNEL_CHANGE) {\n        return {...state, selectedChannel: action.payload.channel };\n    } else if (action.type === types.CHANNEL_ADD) {\n        return state;\n    }\n    return state;\n}\n\n\nexport default combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    posts: postsReducer,\n    channels: channelReducer\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { createStore } from 'redux'\n\nimport App from './components/App'\nimport './index.css'\n\nimport reducers from './reducers'\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode> \n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}