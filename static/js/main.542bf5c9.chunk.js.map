{"version":3,"sources":["helpers/types.js","actions/index.js","services/firebase.js","helpers/db.js","components/ChannelDisplay.js","components/MessageCard.js","components/MessageTextArea.js","pages/Profile.js","pages/Home.js","helpers/auth.js","styles/testlogin.js","pages/LandingPage.js","pages/SignUpPage.js","components/NavBar.js","components/Edit.js","components/App.js","reducers/index.js","index.js"],"names":["types","USER_AUTHENTICATED","USER_DISCONNECTED","GET_USER","MESSAGE_ADDED","ADD_COMMENT","CHANNEL_CHANGE","CHANNEL_ADD","CHANNEL_LIST","getUser","user","type","payload","userId","uid","displayName","email","firstName","lastName","photoURL","website","bio","docId","authenticateUser","authenticated","updateChannels","channels","updateMessages","messages","addComment","comments","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebased","db","firestore","getUserData","Promise","resolve","reject","collection","where","get","then","query","forEach","console","log","id","data","rej","signUpUser","add","dateCreated","Date","getChannels","getMessages","orderBy","getComments","ChannelDisplay","useState","channel","setChannel","newChannelButton","setChannelButton","dispatch","useDispatch","store","useStore","useEffect","response","push","handleChannelChange","channelChange","getState","selectedChannel","className","Typography","variant","display","IconButton","onClick","TextField","fullWidth","onChange","e","target","value","Button","color","size","event","preventDefault","name","creatorId","members","public","addChannel","allChannels","map","key","MessageCard","props","comment","setComment","like","setLike","handleComment","a","commentObject","commentBody","userImg","messageId","commentDoc","Card","CardHeader","avatar","Avatar","src","title","username","CardContent","messageBody","posts","List","dense","ListItem","ListItemAvatar","ListItemText","primary","secondary","placeholder","label","multiline","fullwidth","rows","disabled","MessageTextArea","message","setMessage","elevation","messageObject","channelRef","userRef","body","channelId","catch","error","Profile","this","alt","React","Component","connect","state","Home","displayChannelMessages","index","mapDispatchToProps","signUpWithEmail","password","auth","createUserWithEmailAndPassword","loginWithEmail","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","Copyright","align","Link","href","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","alignItems","margin","backgroundColor","palette","main","form","width","submit","LoginPage","setEmail","setPassword","classes","userResponse","Container","component","maxWidth","CssBaseline","noValidate","onSubmit","required","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Grid","container","item","xs","Box","mt","LandingPage","SignUpPage","handleChange","setState","handleSignUp","authedUser","currentUser","to","helperText","InputLabel","NavBar","AppBar","position","Toolbar","signOut","Edit","setDisplayName","setFirstName","setLastName","setWebsite","setBio","updated","setUpdated","getUserInfo","newFields","doc","update","updateUser","App","Paper","exact","path","defaultUser","combineReducers","action","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.542bf5c9.chunk.js","sourcesContent":["const types = {\n    USER_AUTHENTICATED : 'USER_AUTHENTICATED',\n    USER_DISCONNECTED : 'USER_DISCONNECTED',\n    GET_USER : 'GET_USER',\n    MESSAGE_ADDED : 'MESSAGE_ADDED',\n    ADD_COMMENT : 'ADD_COMMENT',\n    CHANNEL_CHANGE : 'CHANNEL_CHANGE',\n    CHANNEL_ADD : 'CHANNEL_ADD',\n    CHANNEL_LIST : 'CHANNEL_LIST',\n}\n\nexport default types","import  types from '../helpers/types';\n\nexport const getUser = user => {\n    return {\n        type: types.GET_USER,\n        payload: {\n            userId: user.uid,\n            displayName: user.displayName,\n            email: user.email,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            photoURL: 'http://picsum.photos/200',\n            website: user.website,\n            bio: user.bio,\n            docId: user.docId\n        }\n    }\n}\n\nexport const authenticateUser = () => {\n    return {\n        type: types.USER_AUTHENTICATED,\n        payload: {\n            authenticated: true\n        }\n    }\n}\n\nexport const disconnectUser = () => {\n    return {\n        type: types.USER_DISCONNECTED,\n        payload: {\n            authenticated: false\n        }\n    }\n}\n\nexport const updateChannels = channels => {\n    return {\n        type: types.CHANNEL_LIST,\n        payload: {\n            channels\n        }\n    }\n}\n\nexport const channelChange = channel => {\n    return {\n        type: types.CHANNEL_CHANGE,\n        payload: {\n           channel\n        }\n    }\n}\n\nexport const updateMessages = messages => {\n    return {\n        type: types.MESSAGE_ADDED,\n        payload: {\n            messages\n        }\n    }\n}\n\nexport const getMessages = messages => {\n    return {\n        type: types.GET_MESSAGES,\n        payload: {\n            ...messages\n        }\n    }\n}\n\nexport const addComment = comments => {\n    return{\n        type: types.ADD_COMMENT,\n        payload: {\n            comments\n        }\n    }\n}","import firebase from 'firebase'\n//import FIREBASE from '../keys'\n\nconst FIREBASE = {\n    apiKey: \"AIzaSyAHzS-BpuOpzmNVs6fcyGwP5_9C-38tx-g\",\n    authDomain: \"classroomchatter-a7f90.firebaseapp.com\",\n    databaseURL: \"https://classroomchatter-a7f90.firebaseio.com\",\n    projectId: \"classroomchatter-a7f90\",\n    storageBucket: \"classroomchatter-a7f90.appspot.com\",\n    messagingSenderId: \"416988184247\",\n    appId: \"1:416988184247:web:e25ee91765ef93607ed732\",\n    measurementId: \"G-CR305YY5T9\"\n}\n\nconst firebaseConfig = FIREBASE\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebased = firebase\nexport const db = firebase.firestore()\n\n","import { db } from \"../services/firebase\";\n\nexport function addUser(user) {\n  return db.collection(\"users\").add({\n    id: user.uid,\n    displayName: user.displayName,\n    photoURL: user.photoURL,\n  });\n}\n\nexport function getUserData(userId) {\n    const userPromise = new Promise((resolve, reject) => {\n        return db.collection(\"users\").where(\"uid\", \"==\", userId).get().then((query) => {\n          query.forEach((user) => {\n              console.log('this is from db getUserData',user.id)\n            resolve({ ...user.data(), docId: user.id });\n          });\n        },\n          (rej) => {console.log('This is from the userPromise', userId)});\n    })\n    return userPromise\n}\n\nexport function updateUser(user, newFields) {\n  db.collection(\"users\")\n    .doc(user.docId)\n    .update({ ...newFields })\n    .then(() => {\n    }, rej => {\n        console.log(rej)\n    });\n}\n\nexport function signUpUser(user) {\n  return db.collection(\"users\").add({\n    ...user, dateCreated: new Date()\n  });\n}\nexport function addChannel(channel) {\n  return db.collection(\"channels\").add({\n    name: channel.name,\n    creatorId: channel.uid,\n    dateCreated: new Date(),\n    members: [],\n    public: true,\n  });\n}\n\nexport function getChannels() {\n  const channelsPromise = new Promise((resolve, reject) => {\n    db.collection(\"channels\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return channelsPromise;\n}\n\nexport function getMessages() {\n  const messagesPromise = new Promise((resolve, reject) => {\n    db.collection(\"messages\")\n      .orderBy(\"dateCreated\", \"desc\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return messagesPromise;\n}\nexport function getComments() {\n  const commentsPromise = new Promise((resolve, reject) => {\n    db.collection(\"comments\")\n      .get()\n      .then((query) => resolve(query));\n  });\n  return commentsPromise;\n}\nexport function getChannel(channelName) {\n  const channelsPromise = new Promise((resolve, reject) => {\n    db.collection(\"channels\")\n      .where(\"name\", \"==\", channelName)\n      .get()\n      .then((query) => {\n        resolve(query);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n  return channelsPromise;\n}\n\nexport function addMessage(messageObject, channelRef, userRef) {\n  db.collection(\"messages\")\n    .add({\n      body: messageObject,\n      channelId: channelRef.docId,\n      userId: userRef.userId,\n      userImg: userRef.photoURL,\n      displayName: userRef.displayName,\n      dateCreated: new Date(),\n    })\n    .then(() => {\n      console.log(\"new message created\");\n    })\n    .catch((error) => {\n      console.log(\"failure\", error);\n    });\n}\n\nexport function addMessageComment(commentObject) {\n  db.collection(\"comments\").add({ ...commentObject, dateCreated: new Date() });\n}\n","import { Button, IconButton, TextField, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { channelChange, updateChannels } from \"../actions\";\nimport { getChannels, addChannel } from \"../helpers/db\";\n\nconst ChannelDisplay = () => {\n  const [channel, setChannel] = useState(\"\");\n  const [newChannelButton, setChannelButton] = useState(false);\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  useEffect(() => {\n    getChannels().then((response) => {\n      const channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      dispatch(updateChannels(channels));\n    });\n  }, []);\n\n  const handleChannelChange = (channel) => {\n    dispatch(channelChange(channel));\n    console.log(store.getState().channels.selectedChannel.docId);\n  };\n\n  const handleAddChannel = (event) => {\n    event.preventDefault();\n    addChannel({ name: channel, uid: store.getState().user.uid }); // TODO: implement proper messaging\n    getChannels().then((response) => {\n      let channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      dispatch(updateChannels(channels));\n    });\n    setChannel(\"\");\n  };\n\n  return (\n    <div className=\"channel-display\">\n      <div className=\"channel-header\">\n        <Typography variant=\"h6\" display=\"inline\">\n          Create a channel\n        </Typography>\n        <IconButton\n          className=\"create-channel-button custom-button\"\n          onClick={() => setChannelButton(!newChannelButton)}\n        >\n          +\n        </IconButton>\n        {newChannelButton && (\n          <form>\n            <TextField\n              variant=\"standard\"\n              type=\"text\"\n              fullWidth=\"true\"\n              onChange={(e) => setChannel(e.target.value)}\n              value={channel}\n            />\n            <Button\n              color=\"primary\"\n              size=\"medium\"\n              type=\"submit\"\n              onClick={handleAddChannel}\n            >\n              Add Channel\n            </Button>\n          </form>\n        )}\n      </div>\n      {store.getState().channels.allChannels.map((channel) => {\n        return (channel.docId === store.getState().channels.selectedChannel.docId) ? (\n          <Button\n            key={channel.docId}\n            variant=\"outlined\"\n            fullWidth={true}\n            color=\"primary\"\n            onClick={() => handleChannelChange(channel)}\n          >\n            {channel.name}\n          </Button>\n        ) : (\n          <Button\n            key={channel.docId}\n            variant=\"text\"\n            fullWidth={true}\n            onClick={() => handleChannelChange(channel)}\n          >\n            {channel.name}\n          </Button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ChannelDisplay;\n","import { Avatar, IconButton, Card, CardContent, CardHeader, List, ListItem, ListItemAvatar, ListItemText, TextField, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { addMessageComment, getComments } from \"../helpers/db\";\nimport { addComment } from \"../actions\";\n\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport SendRounded from \"@material-ui/icons/SendRounded\"\n\n\nconst MessageCard = (props) => {\n  const [comment, setComment] = useState(\"\");\n  const [like, setLike] = useState(false)\n  const dispatch = useDispatch();\n  const store = useStore();\n  useEffect(() => {\n    getComments().then((response) => {\n      const comments = [];\n      response.forEach((comment) => {\n        comments.push({ ...comment.data(), docId: comment.id });\n      });\n      dispatch(addComment(comments));\n    });\n  }, []);\n\n  const handleComment = async () => {\n    let comments = [];\n    addMessageComment({\n      commentBody: comment,\n      userId: store.getState().user.userId,\n      userImg: store.getState().user.photoURL,\n      displayName: store.getState().user.displayName,\n      messageId: props.docId,\n    });\n    await getComments().then((response) => {\n      response.forEach((commentDoc) => {\n        comments.push({ ...commentDoc.data(), docId: commentDoc.id });\n      });\n    });\n    dispatch(addComment(comments));\n    setComment(\"\");\n  };\n\n  const displayComments = () => {\n    const result = store.getState().posts.comments.map((comment) => {\n      if (comment.messageId === props.docId) {\n        return (\n          <div key={comment.docId}>\n            <List dense={true}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar\n                    variant=\"rounded\"\n                      src={comment.userImg}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={comment.displayName}\n                    secondary={comment.commentBody}\n                  />\n                </ListItem>\n            </List>\n          </div>\n        );\n      }\n    });\n    return result;\n  };\n\n  return (\n    <Card className=\"message-card\">\n      <CardHeader\n        avatar={<Avatar src={props.userImg} />}\n        title={\n          <Typography variant=\"h5\" className=\"message-title\">\n            {props.username}\n          </Typography>\n        }\n      />\n      <CardContent>\n        <Typography variant=\"body1\" className=\"message-body\">\n          {props.messageBody}\n        </Typography>\n        {displayComments()}\n      </CardContent>\n        <TextField\n          placeholder=\"Post a comment!\"\n          id=\"outlined-multiline-static\"\n          label=\"Post a comment!\"\n          multiline\n          fullwidth=\"true\"\n          rows={2}\n          value={comment}\n          variant=\"outlined\"\n          onChange={(e) => setComment(e.target.value)}\n          className=\"comment-box\"\n        />\n        <IconButton\n          type=\"button\"\n          variant=\"contained\"\n          className=\"post-button\"\n          color=\"primary\"\n          disabled={comment !== \"\" ?  false:  true}\n          onClick={handleComment}\n        >\n          <SendRounded />\n        </IconButton>\n        <IconButton variant=\"contained\" className=\"like-button\" onClick={(e) => setLike(!like)}>\n          {like ? <Favorite color=\"primary\"/> :  <FavoriteBorder /> }\n        </IconButton>\n    </Card>\n  );\n};\n\nexport default MessageCard;\n","import React from 'react'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { addMessage, getMessages,  } from '../helpers/db'\nimport { updateMessages } from '../actions'\nimport { Card, TextField, Button } from '@material-ui/core'\n\nconst MessageTextArea = (props) => {\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch();\n\n    const handleMessageSubmit = (event) => {\n        event.preventDefault()\n        addMessage( message, props.selectedChannel, props.user);\n        getMessages().then(response => {\n            let messages = [];\n            response.forEach(message => {\n                messages.push({ ...message.data(), docId: message.id });\n            })\n            dispatch(updateMessages(messages));\n        });\n        setMessage('');\n    }\n\n    return (\n        <Card elevation={15} className=\"message-input-box\">\n            <TextField className=\"comment-box\" color=\"primary\" placeholder=\"Write a post!\" variant=\"outlined\" fullwidth=\"true\" rows={4} multiline={true} onChange={e => setMessage(e.target.value)} value={message}/>\n            <Button variant=\"contained\" color=\"primary\" disabled={message !== '' ? false: true} onClick={handleMessageSubmit}>Send</Button>\n        </Card>\n    )\n}\n\nexport default MessageTextArea","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <div className=\"Profile-area\">\n        <div className=\"profile-name\">\n          {this.props.user.firstName + \" \" + this.props.user.lastName}\n        </div>\n        <div className=\"profile-name\">{this.props.user.displayName}</div>\n        <div className=\"profile-image\">\n          <img\n            alt=\"user avatar\"\n            className=\"profile-img\"\n            src={this.props.user.photoURL}\n          />\n        </div>\n        <div className=\"profile-field-name\"> Email</div>\n        <div className=\"profile-field-value\">{this.props.user.email}</div>\n        <div className=\"profile-field-name\">Website</div>\n        <div className=\"profile-field-value\">{this.props.user.website}</div>\n        <div className=\"profile-field-name\"> Bio</div>\n        <div className=\"profile-field-value\">{this.props.user.bio}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateChannels, updateMessages } from \"../actions\";\nimport ChannelDisplay from \"../components/ChannelDisplay\";\nimport MessageCard from \"../components/MessageCard\";\nimport MessageTextArea from \"../components/MessageTextArea\";\nimport { getMessages, getChannels } from \"../helpers/db\";\nimport Profile from \"./Profile\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    getMessages().then((response) => {\n      let messages = [];\n      response.forEach((message) => {\n        messages.push({ ...message.data(), docId: message.id });\n      });\n      this.props.updateMessages(messages);\n    });\n\n    getChannels().then((response) => {\n      const channels = [];\n      response.forEach((channel) => {\n        channels.push({ ...channel.data(), docId: channel.id });\n      });\n      this.props.updateChannels(channels);\n    });\n  }\n\n  displayChannelMessages = () => {\n    const { selectedChannel, posts } = this.props;\n    const { messages } = posts;\n    const result = messages.map((message, index) => {\n      if (message.channelId === selectedChannel.docId)\n        return (\n          <MessageCard\n            channelId={selectedChannel.docId}\n            key={index}\n            messageBody={message.body}\n            userImg={message.userImg}\n            username={message.displayName}\n            docId={message.docId}\n          />\n        );\n    });\n    return result;\n  };\n\n  render() {\n    return (\n      <div className=\"home-container\">\n        <div className=\"channel-container\">\n          <ChannelDisplay />\n        </div>\n        <div className=\"message-container\">\n          {this.displayChannelMessages()}\n\n          <MessageTextArea />\n        </div>\n        <div className=\"profile-container\">\n          <Profile />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selectedChannel: state.channels.selectedChannel,\n  posts: state.posts,\n  user: state.user,\n});\n\nconst mapDispatchToProps = {\n  updateChannels,\n  updateMessages,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { firebased } from '../services/firebase'\n\nexport function signUpWithEmail(email, password) {\n    return firebased.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n        console.log('Sign up with email failed' ,error)\n    })\n}\n\nexport function loginWithEmail(email, password){\n    return firebased.auth().signInWithEmailAndPassword(email, password).catch(error => {console.log(error)})\n}\n\nexport function signInWithGoogle() {\n    let provider = new firebased.auth.GoogleAuthProvider()\n    return firebased.auth().signInWithPopup(provider)\n}\n\nexport function logOut() {\n    return firebased.auth().signOut()\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GoogleButton from \"react-google-button\";\n\nimport { loginWithEmail, signInWithGoogle } from \"../helpers/auth\";\nimport { authenticateUser, getUser } from \"../actions\";\nimport { getUserData } from \"../helpers/db\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction LoginPage() {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  const classes = useStyles();\n\n  async function handleEmailSignIn(event) {\n    event.preventDefault();\n    let userResponse = await loginWithEmail(email, password);\n    getUserData(userResponse.user.uid).then(\n      (resolve) => {\n          dispatch(getUser(resolve));\n          dispatch(authenticateUser());\n          console.log(store.getState());\n      },\n      (reject) => {\n        return reject;\n      }\n    );\n    \n    \n  }\n\n  async function loginWithGoogle(event) {\n    event.preventDefault();\n    let userResponse = await signInWithGoogle();\n    console.log(userResponse);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleEmailSignIn}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <GoogleButton\n            fullwidth=\"true\"\n            variant=\"contained\"\n            type=\"light\"\n            onClick={loginWithGoogle}\n          />\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/home\" variant=\"body2\">\n                {\" \"}\n                Forgot Password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react'\n\nimport Login from '../styles/testlogin'\n\nclass LandingPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Login />\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React from \"react\";\nimport { signUpUser } from \"../helpers/db\";\nimport { signUpWithEmail } from \"../helpers/auth\";\nimport { firebased } from \"../services/firebase\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { authenticateUser, getUser } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Button, InputLabel, TextField, Typography } from \"@material-ui/core\";\n\nclass SignUpPage extends React.Component {\n  state = {\n    authenticated: false,\n    disabled: true,\n    firstName: '',\n    lastName: '',\n    displayName: '',\n    email: '',\n    password: '',\n    website: '',\n    bio: ''\n  }\n\n\n  handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n        if (this.state.email && this.state.password && this.state.displayName) {\n            this.setState({disabled: false})\n        } \n    }\n\n  handleSignUp = async (event) => {\n    event.preventDefault();\n    let user;\n    if (this.state.email && this.state.password && this.state.displayName) {\n      await signUpWithEmail(this.state.email, this.state.password);\n      let authedUser = firebased.auth().currentUser;\n      if (authedUser !== null) {\n        user = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          displayName: this.state.displayName,\n          uid: authedUser.uid,\n          email: this.state.email,\n          photoURL: authedUser.photoURL || \"https://picsum.photos/200\",\n          website: this.state.website,\n          bio: this.state.bio,\n        };\n\n        await signUpUser(user);\n        this.setState({ authenticated: true });\n        this.props.getUser(user);\n        this.props.authenticateUser();\n      } else {\n        console.log(\"signup failed\");\n      }\n    } else {\n      console.log(\"non valid email or password\");\n    }\n  }\n\n  render() {\n    if (this.state.authenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"signup-container\">\n        <Typography variant=\"h3\">Welcome to Classroom Chatter!</Typography>\n        <div className=\"signup-form-container\">\n          <form>\n            <div>\n              <TextField\n                value={this.state.email}\n                label=\"Email\"\n                autoFocus={true}\n                required={true}\n                className=\"signup-input\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                value={this.state.password}\n                required={true}\n                label=\"Password\"\n                className=\"signup-input\"\n                id=\"password\"\n                helperText=\"Must be at least 6 characters\"\n                name=\"password\"\n                type=\"password\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                value={this.state.displayName}\n                required={true}\n                label=\"Username\"\n                className=\"signup-input\"\n                id=\"displayName\"\n                name=\"displayName\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                value={this.state.firstName}\n                className=\"signup-input\"\n                label=\"First Name\"\n                id=\"firstName\"\n                name=\"firstName\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                value={this.state.lastName}\n                className=\"signup-input\"\n                id=\"lastName\"\n                name=\"lastName\"\n                label=\"Last Name\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                value={this.state.website}\n                className=\"signup-input\"\n                id=\"website\"\n                name=\"website\"\n                label=\"Website\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                value={this.state.bio}\n                className=\"signup-input\"\n                id=\"bio\"\n                name=\"bio\"\n                type=\"text\"\n                label=\"Bio\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"signup-button\">\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                onClick={this.handleSignUp}\n                disabled={this.state.disabled}\n              >\n                Create Account\n              </Button>\n            </div>\n            <InputLabel className=\"signup-label\">\n              Already have an account?\n            </InputLabel>{\" \"}\n            <Link to=\"/login\">sign in</Link>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = {\n  authenticateUser,\n  getUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage);\n","import { Button, Paper, AppBar, Toolbar } from '@material-ui/core';\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom'\nimport { firebased } from '../services/firebase'\nimport { disconnectUser } from '../actions'\n\nfunction NavBar() {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        firebased.auth().signOut();\n        dispatch(disconnectUser())\n    }\n    \n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"nav-container\">\n          <NavLink to=\"/edit\">\n            <Button className=\"nav-link-button\" variant=\"text\">\n              Edit Profile\n            </Button>\n          </NavLink>\n          <NavLink to=\"/\">\n            <Button\n              className=\"nav-link-button\"\n              variant=\"text\"\n              color=\"default\"\n            >\n              Home\n            </Button>\n          </NavLink>\n          <Button\n            variant=\"text\"\n            color=\"secondary\"\n            className=\"nav-link-button\"\n            onClick={signout}\n          >\n            Log Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n}\n\nexport default NavBar\n","import { Button, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { getUserData, updateUser } from \"../helpers/db\";\nimport { Redirect } from \"react-router-dom\";\nimport {getUser} from '../actions'\nconst Edit = (props) => {\n    \n  const dispatch = useDispatch();\n  const store = useStore();\n  const [email, setEmail] = useState(store.getState().user.email);\n  const [displayName, setDisplayName] = useState(\n    store.getState().user.displayName\n  );\n  const [firstName, setFirstName] = useState(store.getState().user.firstName);\n  const [lastName, setLastName] = useState(store.getState().user.lastName);\n  const [website, setWebsite] = useState(store.getState().user.website);\n  const [bio, setBio] = useState(store.getState().user.bio);\n  const [updated, setUpdated] = useState(false);\n  useEffect(() => {\n    let userData;\n    let userResponse;\n    async function getUserInfo() {\n      userResponse = await firebase.auth().currentUser;\n      userData = await getUserData(userResponse.uid);\n    }\n    getUserInfo();\n  }, []);\n\n  const handleEditUser = () => {\n    let user = {\n      firstName,\n      lastName,\n      displayName,\n      email,\n      website,\n      bio,\n    };\n    updateUser(store.getState().user, user);\n    dispatch()\n    setUpdated(true);\n  };\n\n  return (\n    <div>\n      {store.getState().auth.authenticated === false || updated ? (\n        <Redirect to=\"/\" />\n      ) : null}\n      <div className=\"signup-form-container\">\n        <form>\n          <div>\n            <TextField\n              value={email}\n              label=\"Email\"\n              autoFocus={true}\n              required={true}\n              className=\"signup-input\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={displayName}\n              required={true}\n              label=\"Username\"\n              className=\"signup-input\"\n              id=\"displayName\"\n              name=\"displayName\"\n              type=\"text\"\n              onChange={(e) => setDisplayName(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={firstName}\n              className=\"signup-input\"\n              label=\"First Name\"\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={lastName}\n              className=\"signup-input\"\n              id=\"lastName\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              type=\"text\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={website}\n              className=\"signup-input\"\n              id=\"website\"\n              name=\"website\"\n              label=\"Website\"\n              type=\"text\"\n              onChange={(e) => setWebsite(e.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              value={bio}\n              className=\"signup-input\"\n              id=\"bio\"\n              name=\"bio\"\n              type=\"text\"\n              label=\"Bio\"\n              onChange={(e) => setBio(e.target.value)}\n            />\n          </div>\n          <div className=\"signup-button\">\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              color=\"primary\"\n              onClick={handleEditUser}\n            >\n              Update Profile\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Edit;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Home from \"../pages/Home\";\nimport LandingPage from \"../pages/LandingPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport NavBar from \"../components/NavBar\";\nimport { updateChannels, updateMessages } from \"../actions\";\nimport { Paper } from \"@material-ui/core\";\nimport Edit from './Edit'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Paper className=\"app-container\">\n          {this.props.authenticated && <NavBar />}\n\n          {this.props.authenticated ? (\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/edit\" component={Edit} />\n              <Route component={Home} />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route exact path=\"/\" component={LandingPage} />\n              <Route exact path=\"/ReactModuleProject/\" component={LandingPage} />\n              <Route exact path=\"/login\" component={LandingPage} />\n              <Route exact path=\"/ReactModuleProject/login\" component={LandingPage} />\n              <Route exact path=\"/signup\" component={SignUpPage} />\n            </Switch>\n          )}\n        </Paper>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = {\n  updateChannels,\n  updateMessages,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport types from \"../helpers/types\";\n\nlet defaultUser = {\n  bio: \"I am the first test of Signup\",\n  displayName: \"ExampleProject\",\n  email: \"test@email.com\",\n  firstName: \"Travis\",\n  lastName: \"Heffelfinger\",\n  photoURL: \"http://picsum.photos/200\",\n  userId: \"dwCGwI2rwBc42CIQHS8jIJ5ZQR12\",\n  website: \"website\",\n};\n\nfunction authReducer(state = { authenticated: false }, action) {\n  if (action.type === types.USER_AUTHENTICATED) {\n    return { ...state, authenticated: action.payload.authenticated };\n  } else if (action.type === types.USER_DISCONNECTED) {\n    return { ...state, authenticated: action.payload.authenticated };\n  }\n  return state;\n}\n\nfunction userReducer(state = { ...defaultUser }, action) {\n  if (action.type === types.GET_USER) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n}\n\nfunction postsReducer(state = { messages: [], comments: [] }, action) {\n  if (action.type === types.MESSAGE_ADDED) {\n    return { ...state, ...action.payload };\n  } else if (action.type === types.ADD_COMMENT) {\n    return { ...state, ...action.payload };\n  }\n  return state;\n}\n\nfunction channelReducer(\n  state = {\n    selectedChannel: {\n      creatorId: \"default\",\n      dateCreated: \"00:00:00\",\n      name: \"default\",\n      public: true,\n      members: [],\n      docId: \"6I5S8EZ6wdMEk4DRHY5b\",\n    },\n    allChannels: [],\n  },\n  action\n) {\n  if (action.type === types.CHANNEL_CHANGE) {\n    return { ...state, selectedChannel: action.payload.channel };\n  } else if (action.type === types.CHANNEL_ADD) {\n    return state;\n  } else if (action.type === types.CHANNEL_LIST) {\n    return { ...state, allChannels: action.payload.channels };\n  }\n  return state;\n}\n\nexport default combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  posts: postsReducer,\n  channels: channelReducer,\n});\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { createStore } from 'redux'\n\nimport App from './components/App'\nimport './index.css'\n\nimport reducers from './reducers'\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode> \n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}